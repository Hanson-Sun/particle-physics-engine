[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/behaviors/behaviors.js",
    "content": "/**\r\n * Node module export for the the behaviors directory.\r\n */\r\n\r\nconst behaviors = module.exports;\r\n\r\nbehaviors.ChargeInteraction = require(\"./ChargeInteraction\");\r\nbehaviors.Collision = require(\"./Collision\");\r\nbehaviors.PenaltyCollision = require(\"./PenaltyCollision\");\r\nbehaviors.Drag = require(\"./Drag\");\r\nbehaviors.Force = require(\"./Force\");\r\nbehaviors.Gravity = require(\"./Gravity\");\r\nbehaviors.PositionLock = require(\"./PositionLock\");\r\nbehaviors.NearBehavior = require(\"./NearBehavior\");\r\nbehaviors.SelfBehavior = require(\"./SelfBehavior\");",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/behaviors.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "behaviors",
    "memberof": "src/behaviors/behaviors.js",
    "static": true,
    "longname": "src/behaviors/behaviors.js~behaviors",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/behaviors.js",
    "importStyle": null,
    "description": "Node module export for the the behaviors directory.",
    "lineNumber": 5
  },
  {
    "__docId__": 2,
    "kind": "file",
    "name": "src/behaviors/ChargeInteraction.js",
    "content": "const NearBehavior = require(\"./NearBehavior\");\r\n\r\n/**\r\n * `ChargeInteraction` is a NearBehavior that calculates the charge repulsion/attraction forces between \"nearby\" particles.\r\n * It follows Coulomb's law with `k=2`, which is arbitrarily chosen. Although charge interactions have infinite range, the default\r\n * effective radius for this behavior is set to 100000 pixels. Many charge interactions can lead to instability.\r\n */\r\nclass ChargeInteraction extends NearBehavior {\r\n    /**\r\n     * @constructor abstract class cannot be instantiated\r\n     */\r\n    constructor(radius=100000) {\r\n        super();\r\n        this.radius = radius;\r\n        this.epsilon = 0.00001;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     * @param {Number} timeStep \r\n     * @param {Particle[]} particles \r\n     */\r\n    applyBehavior(particle, timeStep, particles) {\r\n        if(particle.charge >= this.epsilon){\r\n\t\t\tfor (let circ of particles) {\r\n                if (particle !== circ && circ.charge >= this.epsilon) {\r\n                    let q1 = particle.charge;\r\n                    let q2 = circ.charge;\r\n                    let x1 = particle.pos;\r\n                    let x2 = circ.pos;\r\n                    let dx = x1.sub(x2);\r\n                    let dxmSqr = dx.magSqr();\r\n                    if (dxmSqr > (particle.radius + circ.radius) * (particle.radius + circ.radius) && dxmSqr < this.radius * this.radius) {\r\n                        dx.normalizeTo();\r\n                        dx.multTo(2 * q1 * q2 / dxmSqr * timeStep);\r\n                        \r\n                        //circ.vel = circ.vel.sub(f)\r\n                        //circ.pos = circ.pos.sub(f.mult(timeStep / circ.mass));\r\n                        circ.pos.subTo(dx.mult(timeStep / circ.mass));\r\n                        //particle.vel = particle.vel.add(f)\r\n                        //particle.pos = particle.pos.add(f.mult(timeStep * timeStep / particle.mass));\r\n                        particle.pos.addTo(dx.mult(timeStep * timeStep / particle.mass));\r\n                        \r\n                    }\r\n                } \t\r\n\t\t    }\r\n\t\t}\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {[Number, Number]}\r\n     */\r\n    range() {\r\n        return [this.radius, this.radius];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     * @param {Particle[]} particles \r\n     */\r\n    applyCorrection(particle, particles) {\r\n        return;\r\n    }\r\n}\r\n\r\nmodule.exports = ChargeInteraction;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/ChargeInteraction.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "NearBehavior",
    "memberof": "src/behaviors/ChargeInteraction.js",
    "static": true,
    "longname": "src/behaviors/ChargeInteraction.js~NearBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/ChargeInteraction.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 4,
    "kind": "class",
    "name": "ChargeInteraction",
    "memberof": "src/behaviors/ChargeInteraction.js",
    "static": true,
    "longname": "src/behaviors/ChargeInteraction.js~ChargeInteraction",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/ChargeInteraction.js",
    "importStyle": null,
    "description": "`ChargeInteraction` is a NearBehavior that calculates the charge repulsion/attraction forces between \"nearby\" particles.\nIt follows Coulomb's law with `k=2`, which is arbitrarily chosen. Although charge interactions have infinite range, the default\neffective radius for this behavior is set to 100000 pixels. Many charge interactions can lead to instability.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "NearBehavior"
    ]
  },
  {
    "__docId__": 5,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/ChargeInteraction.js~ChargeInteraction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/ChargeInteraction.js~ChargeInteraction#constructor",
    "access": null,
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": "abstract class cannot be instantiated"
      }
    ]
  },
  {
    "__docId__": 6,
    "kind": "member",
    "name": "radius",
    "memberof": "src/behaviors/ChargeInteraction.js~ChargeInteraction",
    "static": false,
    "longname": "src/behaviors/ChargeInteraction.js~ChargeInteraction#radius",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 7,
    "kind": "member",
    "name": "epsilon",
    "memberof": "src/behaviors/ChargeInteraction.js~ChargeInteraction",
    "static": false,
    "longname": "src/behaviors/ChargeInteraction.js~ChargeInteraction#epsilon",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/ChargeInteraction.js~ChargeInteraction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/ChargeInteraction.js~ChargeInteraction#applyBehavior",
    "access": null,
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 9,
    "kind": "method",
    "name": "range",
    "memberof": "src/behaviors/ChargeInteraction.js~ChargeInteraction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/ChargeInteraction.js~ChargeInteraction#range",
    "access": null,
    "description": "",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Number, Number]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Number, Number]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 10,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/ChargeInteraction.js~ChargeInteraction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/ChargeInteraction.js~ChargeInteraction#applyCorrection",
    "access": null,
    "description": "",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 11,
    "kind": "file",
    "name": "src/behaviors/Collision.js",
    "content": "const NearBehavior = require(\"./NearBehavior\");\r\n\r\n/**\r\n * `Collision` is a `NearBehavior` that calculates collision interactions between a particle and its nearby particles.\r\n * Collisions operate on impulse-based dynamics and are quite stiff. There are some potential issues with collision instability\r\n * when too much force / number of collisions stack.\r\n */\r\nclass Collision extends NearBehavior {\r\n\r\n\t/**\r\n\t * Instantiates new Collision behavior object\r\n\t * @constructor\r\n\t */\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\t/**\r\n\t * Perform the collision update of a `Particle` by calculating impulse based velocity and position changes. \r\n\t * @override\r\n\t * @param {Particle} particle - particle with collision check\r\n\t * @param {Particle[]} particles - nearby particles that interact with `particle`\r\n\t * @param {Number} timeStep \r\n\t */\r\n\tapplyBehavior(particle, timeStep, particles) {\r\n\t\tlet impulse = new Vector2D(0,0);\r\n\t\tlet position = particle.pos;\r\n\t\tlet mass = particle.mass;\r\n\t\tlet velocity = particle.vel;\r\n\t\tlet bounciness = particle.bounciness;\r\n\t\tlet radius = particle.radius;\r\n\r\n\t\tfor (let circ of particles) {\r\n\t\t\tif (circ != particle) {\r\n                let c_position = circ.pos;\r\n                let c_mass = circ.mass;\r\n                let c_velocity = circ.vel;\r\n                let c_radius = circ.radius;\r\n\r\n\t\t\t\tlet posDiff1 = position.sub(c_position);\r\n\t\t\t\tlet posDiffMagSqr = posDiff1.magSqr();\r\n\t\t\t\tif (posDiffMagSqr < (radius + c_radius) * (radius + c_radius)) {\r\n\t\t\t\t\tlet massConst1 = 2 * c_mass / (mass + c_mass);\r\n\t\t\t\t\tlet vDiff1 = velocity.sub(c_velocity);\r\n\t\t\t\t\tlet dot1 = (vDiff1.dot(posDiff1)) / (posDiffMagSqr);\r\n\r\n\t\t\t\t\tlet massConst2 = 2 * mass / (mass + c_mass);\r\n\t\t\t\t\tlet vDiff2 = c_velocity.sub(velocity);\r\n\t\t\t\t\tlet posDiff2 = c_position.sub(position);\r\n\t\t\t\t\tlet dot2 = (vDiff2.dot(posDiff2)) / (posDiffMagSqr);\r\n\t\t\t\t\timpulse.addTo(posDiff1.mult(dot1 * massConst1));\r\n\t\t\t\t\t// idk why this works tbh but it just does\r\n\t\t\t\t\t// circ.vel = c_velocity.sub(posDiff2.mult(dot2 * massConst2));\r\n\t\t\t\t\tc_velocity.subTo(posDiff2.mult(dot2 * massConst2 * bounciness));\r\n\t\t\t\t\t//circ.pos = circ.pos.sub(posDiff2.mult(dot2 * massConst2 * bounciness * timeStep));\r\n\t\t\t\t\tcirc.pos.subTo(posDiff2.mult(dot2 * massConst2 * bounciness * timeStep));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//particle.vel = velocity.sub(impulse);\r\n\t\tvelocity.subTo(impulse.mult(bounciness));\r\n\t\t//particle.pos = position.sub(impulse.mult(timeStep));\r\n\t\tposition.subTo(impulse.mult(timeStep * bounciness));\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the position-based correction after impulse collision. This ensures that particles are not stuck within each other.\r\n\t * @override\r\n\t * @param {Particle} particle - particle with collision check\r\n\t * @param {Particle[]} particles - nearby particles that interact with `particle`\r\n\t */\r\n\tapplyCorrection(particle, particles) {\r\n\t\tfor (let circ of particles) {\r\n\t\t\tif (circ != particle) {\r\n                let position = particle.pos;\r\n                let mass = particle.mass;\r\n                let radius = particle.radius;\r\n\r\n                let c_position = circ.pos;\r\n                let c_mass = circ.mass;\r\n                let c_radius = circ.radius;\r\n\r\n\t\t\t\tlet posDiff1 = position.sub(c_position);\r\n\t\t\t\tif (posDiff1.magSqr() < (radius + c_radius) * (radius + c_radius)) {\r\n\t\t\t\t\tlet direction1 = posDiff1.normalize();\r\n\t\t\t\t\tlet overlap = radius + c_radius - posDiff1.mag();\r\n\r\n\t\t\t\t\t//circ.pos = circ.pos.sub(direction1.mult(overlap * mass / (mass + c_mass)));\r\n\t\t\t\t\tc_position.subTo(direction1.mult(overlap * mass / (mass + c_mass)));\r\n\t\t\t\t\t//particle.pos = position.add(direction1.mult(overlap * c_mass / (mass + c_mass)));\r\n\t\t\t\t\tposition.addTo(direction1.mult(overlap * c_mass / (mass + c_mass)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n   \t/**\r\n     * @override\r\n     * @returns {null}\r\n     */\r\n    range() {\r\n        return null;\r\n    }\r\n\r\n\t/**\r\n\t * A static method that checks whether two particles are colliding\r\n\t * @param {Particle} p1 \r\n\t * @param {Particle} p2 \r\n\t * @returns boolean\r\n\t * @static\r\n\t */\r\n\tstatic isCollide(p1, p2) {\r\n\t\tlet position = p1.pos;\r\n\t\tlet radius = p1.radius;\r\n\t\tlet c_position = p2.pos;\r\n\t\tlet c_radius = p2.radius;\r\n\t\tlet posDiff1 = position.sub(c_position);\r\n\t\treturn posDiff1.magSqr() < (radius + c_radius) * (radius + c_radius);\r\n\t}\r\n}\r\n\r\nmodule.exports = Collision;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/Collision.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "name": "NearBehavior",
    "memberof": "src/behaviors/Collision.js",
    "static": true,
    "longname": "src/behaviors/Collision.js~NearBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/Collision.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 13,
    "kind": "class",
    "name": "Collision",
    "memberof": "src/behaviors/Collision.js",
    "static": true,
    "longname": "src/behaviors/Collision.js~Collision",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/Collision.js",
    "importStyle": null,
    "description": "`Collision` is a `NearBehavior` that calculates collision interactions between a particle and its nearby particles.\nCollisions operate on impulse-based dynamics and are quite stiff. There are some potential issues with collision instability\nwhen too much force / number of collisions stack.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "NearBehavior"
    ]
  },
  {
    "__docId__": 14,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/Collision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Collision.js~Collision#constructor",
    "access": null,
    "description": "Instantiates new Collision behavior object",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/Collision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Collision.js~Collision#applyBehavior",
    "access": null,
    "description": "Perform the collision update of a `Particle` by calculating impulse based velocity and position changes. ",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": "particle with collision check"
      },
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": "nearby particles that interact with `particle`"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/Collision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Collision.js~Collision#applyCorrection",
    "access": null,
    "description": "Performs the position-based correction after impulse collision. This ensures that particles are not stuck within each other.",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": "particle with collision check"
      },
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": "nearby particles that interact with `particle`"
      }
    ],
    "override": true
  },
  {
    "__docId__": 17,
    "kind": "method",
    "name": "range",
    "memberof": "src/behaviors/Collision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Collision.js~Collision#range",
    "access": null,
    "description": "",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "isCollide",
    "memberof": "src/behaviors/Collision.js~Collision",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/Collision.js~Collision.isCollide",
    "access": null,
    "description": "A static method that checks whether two particles are colliding",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "boolean"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "boolean"
    }
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "src/behaviors/DeprecatedCollision.js",
    "content": "\r\nclass Collision extends NearBehavior {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} timeStep \r\n     */\r\n    applyBehavior(particle, timeStep, particles) {\r\n        this.collide(particle, particles, timeStep);\r\n        this.collideCorrection(particle, particles);\r\n    }\r\n\r\n\t// this works but i literally don't know why??? \r\n\t// try using updated velocity --> accumulate updates and add towards the end.\r\n\tcollide(particle, particles, timeStep) {\r\n\t\tfor (let circ of particles) {\r\n\t\t\tif (circ != particle) {\r\n                let position = particle.pos;\r\n                let mass = particle.mass;\r\n                let velocity = particle.vel;\r\n                let bounciness = particle.bounciness;\r\n                let radius = particle.radius;\r\n    \r\n                let c_position = circ.pos;\r\n                let c_mass = circ.mass;\r\n                let c_velocity = circ.vel;\r\n                let c_radius = circ.radius;\r\n\r\n\t\t\t\tlet posDiff1 = position.sub(c_position);\r\n\t\t\t\tif (posDiff1.magSqr() < (radius + c_radius) * (radius + c_radius)) {\r\n\r\n\t\t\t\t\tposDiff1 = position.sub(c_position);\r\n\t\t\t\t\tlet posDiffMagSqr = posDiff1.magSqr();\r\n\t\t\t\t\tlet massConst1 = 2 * c_mass / (mass + c_mass);\r\n\t\t\t\t\tlet vDiff1 = velocity.sub(c_velocity);\r\n\t\t\t\t\tlet dot1 = (vDiff1.dot(posDiff1)) / (posDiffMagSqr);\r\n\r\n\t\t\t\t\tlet massConst2 = 2 * mass / (mass + c_mass);\r\n\t\t\t\t\tlet vDiff2 = c_velocity.sub(velocity);\r\n\t\t\t\t\tlet posDiff2 = c_position.sub(position);\r\n\t\t\t\t\tlet dot2 = (vDiff2.dot(posDiff2)) / (posDiffMagSqr);\r\n\r\n\t\t\t\t\t// a constant 2 is required for some reason, but it wont work if added anywhere else\r\n\t\t\t\t\tif (circ.isPivot) {\r\n\t\t\t\t\t\tparticle.vel = (velocity.sub(posDiff1.mult(dot1 * 2))).mult(bounciness);\r\n\t\t\t\t\t\tparticle.pos = particle.pos.add(posDiff1.mult(dot1 * 2).mult(bounciness * timeStep * 2));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tparticle.vel = (velocity.sub(posDiff1.mult(dot1 * massConst1))).mult(bounciness);\r\n\t\t\t\t\t\tparticle.pos = particle.pos.add(posDiff1.mult(dot1 * massConst1).mult(bounciness * timeStep * 2));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (particle.isPivot) {\r\n\t\t\t\t\t\tcirc.vel = (c_velocity.sub(posDiff2.mult(dot2 * 2))).mult(bounciness);\r\n\t\t\t\t\t\tcirc.pos = circ.pos.add(posDiff2.mult(dot2 * 2).mult(bounciness * timeStep));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcirc.vel = (c_velocity.sub(posDiff2.mult(dot2 * massConst2))).mult(bounciness);\r\n\t\t\t\t\t\tcirc.pos = circ.pos.add(posDiff2.mult(dot2 * massConst2).mult(bounciness * timeStep));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcollideCorrection(particle, particles) {\r\n\t\tfor (let circ of particles) {\r\n\t\t\tif (circ != particle) {\r\n                let position = particle.pos;\r\n                let mass = particle.mass;\r\n                let radius = particle.radius;\r\n\r\n                let c_position = circ.pos;\r\n                let c_mass = circ.mass;\r\n                let c_radius = circ.radius;\r\n\r\n\t\t\t\tlet posDiff1 = position.sub(c_position);\r\n\t\t\t\tif (posDiff1.magSqr() < (radius + c_radius) * (radius + c_radius)) {\r\n\t\t\t\t\tlet direction1 = (c_position.sub(position)).normalize();\r\n\t\t\t\t\tlet overlap = radius + c_radius - posDiff1.mag();\r\n\r\n\t\t\t\t\tif (circ.isPivot) {\r\n\t\t\t\t\t\tparticle.pos = position.sub(direction1.mult(overlap));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tparticle.pos = position.sub(direction1.mult(overlap * c_mass / (mass + c_mass)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    RANGE() {\r\n        return null;\r\n    }\r\n\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/DeprecatedCollision.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "class",
    "name": "Collision",
    "memberof": "src/behaviors/DeprecatedCollision.js",
    "static": true,
    "longname": "src/behaviors/DeprecatedCollision.js~Collision",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/DeprecatedCollision.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "NearBehavior"
    ]
  },
  {
    "__docId__": 21,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/DeprecatedCollision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/DeprecatedCollision.js~Collision#constructor",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 22,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/DeprecatedCollision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/DeprecatedCollision.js~Collision#applyBehavior",
    "access": null,
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 23,
    "kind": "method",
    "name": "collide",
    "memberof": "src/behaviors/DeprecatedCollision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/DeprecatedCollision.js~Collision#collide",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 24,
    "kind": "method",
    "name": "collideCorrection",
    "memberof": "src/behaviors/DeprecatedCollision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/DeprecatedCollision.js~Collision#collideCorrection",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "RANGE",
    "memberof": "src/behaviors/DeprecatedCollision.js~Collision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/DeprecatedCollision.js~Collision#RANGE",
    "access": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 26,
    "kind": "file",
    "name": "src/behaviors/Drag.js",
    "content": "const SelfBehavior = require(\"./SelfBehavior\");\r\n\r\n/**\r\n * `Drag` is a `SelfBehavior` that applies a viscous drag force on the particle itself.\r\n * It generally follows the circular quadratic drag formula in turbulent fluids. Units are arbitrary and should be tuned experimentally.\r\n */\r\nclass Drag extends SelfBehavior {\r\n\t/**\r\n\t * Instantiates new Drag behavior object\r\n\t * @constructor\r\n\t */    \r\n    constructor(viscosity) {\r\n        super();\r\n        this.viscosity = viscosity;\r\n        this.LOWER_LIMIT = 0.01;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     * @param {Number} timeStep \r\n     */\r\n    applyBehavior(particle, timeStep) {\r\n        let vel = particle.vel;\r\n        let vMagSqr = vel.magSqr();\r\n\t\tif (vMagSqr > this.LOWER_LIMIT && this.viscosity != 0) {\r\n\t\t\tlet dragC = 0.0001 * (Math.PI * this.viscosity * particle.radius) / particle.mass;\r\n\t\t\tlet vNormal = vel.normalize();\r\n\t\t\tlet fDrag = vNormal.mult(vMagSqr * dragC);\r\n\t\t\t//particle.vel = vel.sub(fDrag.mult(timeStep));\r\n            //particle.pos = particle.pos.sub(fDrag.mult(timeStep * timeStep));\r\n            particle.pos.subTo(fDrag.mult(timeStep * timeStep));\r\n\t\t}\r\n\t}\r\n\r\n     /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     */\r\n\tapplyCorrection(particle) {\r\n        return;\r\n    }\r\n}\r\n\r\nmodule.exports = Drag;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/Drag.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "name": "SelfBehavior",
    "memberof": "src/behaviors/Drag.js",
    "static": true,
    "longname": "src/behaviors/Drag.js~SelfBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/Drag.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 28,
    "kind": "class",
    "name": "Drag",
    "memberof": "src/behaviors/Drag.js",
    "static": true,
    "longname": "src/behaviors/Drag.js~Drag",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/Drag.js",
    "importStyle": null,
    "description": "`Drag` is a `SelfBehavior` that applies a viscous drag force on the particle itself.\nIt generally follows the circular quadratic drag formula in turbulent fluids. Units are arbitrary and should be tuned experimentally.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "SelfBehavior"
    ]
  },
  {
    "__docId__": 29,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/Drag.js~Drag",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Drag.js~Drag#constructor",
    "access": null,
    "description": "Instantiates new Drag behavior object",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 30,
    "kind": "member",
    "name": "viscosity",
    "memberof": "src/behaviors/Drag.js~Drag",
    "static": false,
    "longname": "src/behaviors/Drag.js~Drag#viscosity",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 31,
    "kind": "member",
    "name": "LOWER_LIMIT",
    "memberof": "src/behaviors/Drag.js~Drag",
    "static": false,
    "longname": "src/behaviors/Drag.js~Drag#LOWER_LIMIT",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 32,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/Drag.js~Drag",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Drag.js~Drag#applyBehavior",
    "access": null,
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 33,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/Drag.js~Drag",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Drag.js~Drag#applyCorrection",
    "access": null,
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 34,
    "kind": "file",
    "name": "src/behaviors/Force.js",
    "content": "const SelfBehavior = require(\"./SelfBehavior\");\r\n\r\n/**\r\n * `Force` is a `SelfBehavior` that applies a constant force on the particle.   \r\n */\r\nclass Force extends SelfBehavior {\r\n\t/**\r\n\t * Instantiates new Force behavior object\r\n\t * @constructor\r\n\t */    \r\n    constructor(force) {\r\n        super();\r\n        this.force = force;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     * @param {Number} timeStep \r\n     */\r\n    applyBehavior(particle, timeStep) {\r\n        //particle.applyForce(this.force, timeStep);\r\n        //particle.pos = particle.pos.add(this.force.mult(timeStep * timeStep / particle.mass));\r\n        particle.pos.addTo(this.force.mult(timeStep * timeStep / particle.mass));\r\n    }\r\n    \r\n    /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     */\r\n\tapplyCorrection(particle) {\r\n        return;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Force;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/Force.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 35,
    "kind": "variable",
    "name": "SelfBehavior",
    "memberof": "src/behaviors/Force.js",
    "static": true,
    "longname": "src/behaviors/Force.js~SelfBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/Force.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 36,
    "kind": "class",
    "name": "Force",
    "memberof": "src/behaviors/Force.js",
    "static": true,
    "longname": "src/behaviors/Force.js~Force",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/Force.js",
    "importStyle": null,
    "description": "`Force` is a `SelfBehavior` that applies a constant force on the particle.   ",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "SelfBehavior"
    ]
  },
  {
    "__docId__": 37,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/Force.js~Force",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Force.js~Force#constructor",
    "access": null,
    "description": "Instantiates new Force behavior object",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 38,
    "kind": "member",
    "name": "force",
    "memberof": "src/behaviors/Force.js~Force",
    "static": false,
    "longname": "src/behaviors/Force.js~Force#force",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 39,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/Force.js~Force",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Force.js~Force#applyBehavior",
    "access": null,
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 40,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/Force.js~Force",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Force.js~Force#applyCorrection",
    "access": null,
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 41,
    "kind": "file",
    "name": "src/behaviors/Gravity.js",
    "content": "const SelfBehavior = require(\"./SelfBehavior\");\r\n\r\n/**\r\n * `Gravity` is a `SelfBehavior` that applies a constant acceleration downwards.\r\n */\r\nclass Gravity extends SelfBehavior {\r\n\t/**\r\n\t * Instantiates new Gravity behavior object\r\n\t * @constructor\r\n\t */     \r\n    constructor(acceleration) {\r\n        super();\r\n        this.acceleration = acceleration;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     * @param {Number} timeStep \r\n     */\r\n    applyBehavior(particle, timeStep) {\r\n        //particle.applyAcceleration(this.acceleration, timeStep);\r\n        particle.pos.addTo(this.acceleration.mult(timeStep * timeStep));\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     */\r\n\tapplyCorrection(particle) {\r\n        return;\r\n    }\r\n}\r\n\r\nmodule.exports = Gravity;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/Gravity.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 42,
    "kind": "variable",
    "name": "SelfBehavior",
    "memberof": "src/behaviors/Gravity.js",
    "static": true,
    "longname": "src/behaviors/Gravity.js~SelfBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/Gravity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 43,
    "kind": "class",
    "name": "Gravity",
    "memberof": "src/behaviors/Gravity.js",
    "static": true,
    "longname": "src/behaviors/Gravity.js~Gravity",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/Gravity.js",
    "importStyle": null,
    "description": "`Gravity` is a `SelfBehavior` that applies a constant acceleration downwards.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "SelfBehavior"
    ]
  },
  {
    "__docId__": 44,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/Gravity.js~Gravity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Gravity.js~Gravity#constructor",
    "access": null,
    "description": "Instantiates new Gravity behavior object",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 45,
    "kind": "member",
    "name": "acceleration",
    "memberof": "src/behaviors/Gravity.js~Gravity",
    "static": false,
    "longname": "src/behaviors/Gravity.js~Gravity#acceleration",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/Gravity.js~Gravity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Gravity.js~Gravity#applyBehavior",
    "access": null,
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 47,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/Gravity.js~Gravity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/Gravity.js~Gravity#applyCorrection",
    "access": null,
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/behaviors/NearBehavior.js",
    "content": "/**\r\n * Abstract class that represents nearby interactions. This type behavior will influence, or is dependent on a set of particles in its near proximity\r\n */\r\nclass NearBehavior {\r\n    /**\r\n     * @constructor abstract class cannot be instantiated\r\n     */\r\n    constructor() {\r\n        if (this.constructor == NearBehavior) {\r\n            throw new Error(\"NearBehavior interface class cannot be instantiated.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply behavior on `particle` and/or `particles`\r\n     * @param {Particle} particle main particle\r\n     * @param {Number} timeStep time step of simulation\r\n     * @param {Particle[]} particles surrounding particles\r\n     * @abstract\r\n     */\r\n    applyBehavior(particle, timeStep, particles) {\r\n        throw new Error(\"Method 'applyBehavior()' must be implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Returns the effective range / defines the size of the nearby range\r\n     * @returns {[Number, Number]} pair of rectangular dimensions that represent the effective range\r\n     * @abstract\r\n     */\r\n    range() {\r\n        throw new Error(\"Method 'range()' must be implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Apply a positional correction to `particle` and/or `particles`\r\n     * @param {Particle} particle \r\n     * @param {Particle[]} particles \r\n     * @abstract\r\n     */\r\n    applyCorrection(particle, particles) {\r\n        throw new Error(\"Method 'applyCorrection()' must be implemented.\");\r\n    }\r\n}\r\n\r\nmodule.exports = NearBehavior;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/NearBehavior.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "NearBehavior",
    "memberof": "src/behaviors/NearBehavior.js",
    "static": true,
    "longname": "src/behaviors/NearBehavior.js~NearBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/NearBehavior.js",
    "importStyle": null,
    "description": "Abstract class that represents nearby interactions. This type behavior will influence, or is dependent on a set of particles in its near proximity",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/NearBehavior.js~NearBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/NearBehavior.js~NearBehavior#constructor",
    "access": null,
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": "abstract class cannot be instantiated"
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/NearBehavior.js~NearBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/NearBehavior.js~NearBehavior#applyBehavior",
    "access": null,
    "description": "Apply behavior on `particle` and/or `particles`",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": "main particle"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": "time step of simulation"
      },
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": "surrounding particles"
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "range",
    "memberof": "src/behaviors/NearBehavior.js~NearBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/NearBehavior.js~NearBehavior#range",
    "access": null,
    "description": "Returns the effective range / defines the size of the nearby range",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Number, Number]} pair of rectangular dimensions that represent the effective range"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Number, Number]"
      ],
      "spread": false,
      "description": "pair of rectangular dimensions that represent the effective range"
    },
    "abstract": true
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/NearBehavior.js~NearBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/NearBehavior.js~NearBehavior#applyCorrection",
    "access": null,
    "description": "Apply a positional correction to `particle` and/or `particles`",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": ""
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/behaviors/PenaltyCollision.js",
    "content": "const NearBehavior = require(\"./NearBehavior\");\r\n\r\n/**\r\n * `Collision` is a `NearBehavior` that calculates collision interactions between a particle and its nearby particles using softer penalty forces.\r\n * Collisions are basically spring constraints between particles when they collide. High stiffness values can lead to energy inconsistency, whereas \r\n * lower stiffness can cause poor colliding behavior between particles. Overall, this method is more stable in high density stacking simulations, \r\n * but performs worse in more dynamic scenarios.\r\n */\r\nclass PenaltyCollision extends NearBehavior {\r\n\r\n\t/**\r\n\t * Instantiates new PenaltyCollision behavior object\r\n\t * @constructor\r\n\t */\r\n    constructor(stiffness) {\r\n        super();\r\n        this.stiffness = stiffness;\r\n    }\r\n\r\n\t/**\r\n\t * Perform the collision update of a `Particle` by calculating impulse based velocity and position changes. \r\n     * @override\r\n\t * @param {Particle} particle - particle with collision check\r\n\t * @param {Particle[]} particles - nearby particles that interact with `particle`\r\n\t * @param {Number} timeStep \r\n\t */\r\n\tapplyBehavior(particle, timeStep, particles) {\r\n\t\tlet impulse = new Vector2D(0,0);\r\n\t\tlet position = particle.pos;\r\n\t\tlet mass = particle.mass;\r\n\t\tlet velocity = particle.vel;\r\n\t\tlet bounciness = particle.bounciness;\r\n\t\tlet radius = particle.radius;\r\n\r\n\t\tfor (let circ of particles) {\r\n\t\t\tif (circ != particle) {\r\n                let c_position = circ.pos;\r\n                let c_mass = circ.mass;\r\n                let c_velocity = circ.vel;\r\n                let c_radius = circ.radius;\r\n\r\n\t\t\t\tlet dp = position.sub(c_position);\r\n\t\t\t\tlet posDiffMagSqr = dp.magSqr();\r\n\t\t\t\tif (posDiffMagSqr < (radius + c_radius) * (radius + c_radius)) {\r\n                    let dpMag = dp.mag();\r\n                    dp.multTo(1 / dpMag);\r\n                    let dxMag = radius + c_radius - dpMag;\r\n                    let force = dp.mult(-this.stiffness * dxMag);\r\n            \r\n                    const a1 = force.mult(1 / c_mass);\r\n                    const a2 = force.mult(1 / mass);\r\n            \r\n                    a1.multTo(timeStep * timeStep);\r\n                    a2.multTo(timeStep * timeStep);\r\n\r\n\t\t\t\t\timpulse.addTo(a2);\r\n\t\t\t\t\tcirc.pos.addTo(a1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//velocity.subTo(impulse.mult(bounciness));\r\n\t\tposition.subTo(impulse.mult(bounciness));\r\n\t}\r\n\r\n\t/**\r\n\t * Does not do anything\r\n     * @override\r\n\t * @param {Particle} particle - particle with collision check\r\n\t * @param {Particle[]} particles - nearby particles that interact with `particle`\r\n\t */\r\n\tapplyCorrection(particle, particles) {\r\n        return;\r\n\t}\r\n\r\n   \t/**\r\n     * @override\r\n     * @returns {null}\r\n     */\r\n    range() {\r\n        return null;\r\n    }\r\n\r\n\t/**\r\n\t * A static method that checks whether two particles are colliding\r\n\t * @param {Particle} p1 \r\n\t * @param {Particle} p2 \r\n\t * @returns boolean\r\n\t * @static\r\n\t */\r\n\tstatic isCollide(p1, p2) {\r\n\t\tlet position = p1.pos;\r\n\t\tlet radius = p1.radius;\r\n\t\tlet c_position = p2.pos;\r\n\t\tlet c_radius = p2.radius;\r\n\t\tlet posDiff1 = position.sub(c_position);\r\n\t\treturn posDiff1.magSqr() < (radius + c_radius) * (radius + c_radius);\r\n\t}\r\n}\r\n\r\nmodule.exports = PenaltyCollision;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/PenaltyCollision.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "NearBehavior",
    "memberof": "src/behaviors/PenaltyCollision.js",
    "static": true,
    "longname": "src/behaviors/PenaltyCollision.js~NearBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/PenaltyCollision.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 56,
    "kind": "class",
    "name": "PenaltyCollision",
    "memberof": "src/behaviors/PenaltyCollision.js",
    "static": true,
    "longname": "src/behaviors/PenaltyCollision.js~PenaltyCollision",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/PenaltyCollision.js",
    "importStyle": null,
    "description": "`Collision` is a `NearBehavior` that calculates collision interactions between a particle and its nearby particles using softer penalty forces.\nCollisions are basically spring constraints between particles when they collide. High stiffness values can lead to energy inconsistency, whereas \nlower stiffness can cause poor colliding behavior between particles. Overall, this method is more stable in high density stacking simulations, \nbut performs worse in more dynamic scenarios.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "NearBehavior"
    ]
  },
  {
    "__docId__": 57,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/PenaltyCollision.js~PenaltyCollision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/PenaltyCollision.js~PenaltyCollision#constructor",
    "access": null,
    "description": "Instantiates new PenaltyCollision behavior object",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "stiffness",
    "memberof": "src/behaviors/PenaltyCollision.js~PenaltyCollision",
    "static": false,
    "longname": "src/behaviors/PenaltyCollision.js~PenaltyCollision#stiffness",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/PenaltyCollision.js~PenaltyCollision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/PenaltyCollision.js~PenaltyCollision#applyBehavior",
    "access": null,
    "description": "Perform the collision update of a `Particle` by calculating impulse based velocity and position changes. ",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": "particle with collision check"
      },
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": "nearby particles that interact with `particle`"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/PenaltyCollision.js~PenaltyCollision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/PenaltyCollision.js~PenaltyCollision#applyCorrection",
    "access": null,
    "description": "Does not do anything",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": "particle with collision check"
      },
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": "nearby particles that interact with `particle`"
      }
    ],
    "override": true
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "range",
    "memberof": "src/behaviors/PenaltyCollision.js~PenaltyCollision",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/PenaltyCollision.js~PenaltyCollision#range",
    "access": null,
    "description": "",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "isCollide",
    "memberof": "src/behaviors/PenaltyCollision.js~PenaltyCollision",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/PenaltyCollision.js~PenaltyCollision.isCollide",
    "access": null,
    "description": "A static method that checks whether two particles are colliding",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "boolean"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "boolean"
    }
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/behaviors/PositionLock.js",
    "content": "const SelfBehavior = require(\"./SelfBehavior\");\r\n\r\n/**\r\n * \r\n */\r\nclass PositionLock extends SelfBehavior {\r\n    /**\r\n     * @constructor abstract class cannot be instantiated\r\n     */\r\n    constructor(position) {\r\n        super();\r\n        this.position = position;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     * @param {Number} timeStep \r\n     */    \r\n    applyBehavior(particle, timeStep) {\r\n        return;\r\n    }\r\n\r\n     /**\r\n     * @override\r\n     * @param {Particle} particle \r\n     */\r\n    applyCorrection(particle) {\r\n        particle.vel = new Vector2D(0,0);\r\n        particle.pos = this.position;\r\n    }\r\n}\r\n\r\nmodule.exports = PositionLock;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/PositionLock.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "SelfBehavior",
    "memberof": "src/behaviors/PositionLock.js",
    "static": true,
    "longname": "src/behaviors/PositionLock.js~SelfBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/PositionLock.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "PositionLock",
    "memberof": "src/behaviors/PositionLock.js",
    "static": true,
    "longname": "src/behaviors/PositionLock.js~PositionLock",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/PositionLock.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "SelfBehavior"
    ]
  },
  {
    "__docId__": 66,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/PositionLock.js~PositionLock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/PositionLock.js~PositionLock#constructor",
    "access": null,
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": "abstract class cannot be instantiated"
      }
    ]
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "position",
    "memberof": "src/behaviors/PositionLock.js~PositionLock",
    "static": false,
    "longname": "src/behaviors/PositionLock.js~PositionLock#position",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/PositionLock.js~PositionLock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/PositionLock.js~PositionLock#applyBehavior",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/PositionLock.js~PositionLock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/PositionLock.js~PositionLock#applyCorrection",
    "access": null,
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/behaviors/SelfBehavior.js",
    "content": "/**\r\n * Abstract class that represents self interactions. These behaviors are only dependent on the singular particle it is attached to.\r\n */\r\nclass SelfBehavior {\r\n    /**\r\n     * @constructor abstract class cannot be instantiated\r\n     */\r\n    constructor() {\r\n        if (this.constructor == SelfBehavior) {\r\n            throw new Error(\"SelfBehavior interface class cannot be instantiated.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply behavior on `particle`\r\n     * @param {Particle} particle \r\n     * @param {Number} timeStep \r\n     * @abstract\r\n     */\r\n    applyBehavior(particle, timeStep) {\r\n        throw new Error(\"Method 'applyBehavior()' must be implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Apply a positional correction to `particle`\r\n     * @param {Particle} particle \r\n     * @abstract\r\n     */\r\n    applyCorrection(particle) {\r\n        throw new Error(\"Method 'applyCorrection()' must be implemented.\");\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = SelfBehavior;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/behaviors/SelfBehavior.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "class",
    "name": "SelfBehavior",
    "memberof": "src/behaviors/SelfBehavior.js",
    "static": true,
    "longname": "src/behaviors/SelfBehavior.js~SelfBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/behaviors/SelfBehavior.js",
    "importStyle": null,
    "description": "Abstract class that represents self interactions. These behaviors are only dependent on the singular particle it is attached to.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 72,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/SelfBehavior.js~SelfBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/SelfBehavior.js~SelfBehavior#constructor",
    "access": null,
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": "abstract class cannot be instantiated"
      }
    ]
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "applyBehavior",
    "memberof": "src/behaviors/SelfBehavior.js~SelfBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/SelfBehavior.js~SelfBehavior#applyBehavior",
    "access": null,
    "description": "Apply behavior on `particle`",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/behaviors/SelfBehavior.js~SelfBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/SelfBehavior.js~SelfBehavior#applyCorrection",
    "access": null,
    "description": "Apply a positional correction to `particle`",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/constraints/Constraint.js",
    "content": "const Vector2D = require(\"../utils/Vector2D\");\r\n\r\n/**\r\n * Interface for all Constraints\r\n * @interface\r\n */\r\nclass Constraint {\r\n    /**\r\n     * @constructor `Constraint` interface cannot be instantiated\r\n     */\r\n    constructor() {\r\n        this.color = \"black\";\r\n\t\tthis.force = new Vector2D(0,0);\t\r\n        this.breakForce = Infinity;\r\n        if (this.constructor == Constraint) {\r\n            throw new Error(\"Constraint interface class cannot be instantiated.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the constraint.\r\n     * @param {Number} timeStep \r\n     */\r\n    update(timeStep) {\r\n        throw new Error(\"Method 'update()' must be implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Calculates the list of vertices that will be used in the rendering process\r\n     * @returns {Vector2D[]}\r\n     */\r\n    vertices() {\r\n        throw new Error(\"Method 'vertices()' must be implemented\");\r\n    }\r\n\r\n     /**\r\n     * Calculates the list of particles that is involved with the constraint\r\n     * @returns {Particle[]}\r\n     */\r\n    particles() {\r\n        throw new Error(\"Method 'vertices()' must be implemented\");\r\n    }\r\n}\r\n\r\nmodule.exports = Constraint;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/constraints/Constraint.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "Vector2D",
    "memberof": "src/constraints/Constraint.js",
    "static": true,
    "longname": "src/constraints/Constraint.js~Vector2D",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/Constraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 77,
    "kind": "class",
    "name": "Constraint",
    "memberof": "src/constraints/Constraint.js",
    "static": true,
    "longname": "src/constraints/Constraint.js~Constraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/Constraint.js",
    "importStyle": null,
    "description": "Interface for all Constraints",
    "lineNumber": 7,
    "interface": true
  },
  {
    "__docId__": 78,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/constraints/Constraint.js~Constraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/Constraint.js~Constraint#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": "`Constraint` interface cannot be instantiated"
      }
    ]
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "color",
    "memberof": "src/constraints/Constraint.js~Constraint",
    "static": false,
    "longname": "src/constraints/Constraint.js~Constraint#color",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "force",
    "memberof": "src/constraints/Constraint.js~Constraint",
    "static": false,
    "longname": "src/constraints/Constraint.js~Constraint#force",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "breakForce",
    "memberof": "src/constraints/Constraint.js~Constraint",
    "static": false,
    "longname": "src/constraints/Constraint.js~Constraint#breakForce",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "update",
    "memberof": "src/constraints/Constraint.js~Constraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/Constraint.js~Constraint#update",
    "access": null,
    "description": "Updates the constraint.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "vertices",
    "memberof": "src/constraints/Constraint.js~Constraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/Constraint.js~Constraint#vertices",
    "access": null,
    "description": "Calculates the list of vertices that will be used in the rendering process",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "particles",
    "memberof": "src/constraints/Constraint.js~Constraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/Constraint.js~Constraint#particles",
    "access": null,
    "description": "Calculates the list of particles that is involved with the constraint",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Particle[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Particle[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/constraints/constraints.js",
    "content": "/**\r\n * Node module exports for the constraints directory\r\n */\r\n\r\nconst constraints =  module.exports;\r\n\r\nconstraints.Constraint = require(\"./Constraint\");\r\nconstraints.ForceDistanceConstraint = require(\"./ForceDistanceConstraint\");\r\nconstraints.ForcePivotConstraint = require(\"./ForcePivotConstraint\");\r\nconstraints.PositionDistanceConstraint = require(\"./PositionDistanceConstraint\");\r\nconstraints.PositionPivotConstraint = require(\"./PositionPivotConstraint\");\r\n",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/constraints/constraints.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "constraints",
    "memberof": "src/constraints/constraints.js",
    "static": true,
    "longname": "src/constraints/constraints.js~constraints",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/constraints.js",
    "importStyle": null,
    "description": "Node module exports for the constraints directory",
    "lineNumber": 5
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/constraints/ForceDistanceConstraint.js",
    "content": "const Constraint = require(\"./Constraint\");\r\nconst Particle = require(\"../core/Particle\");\r\nconst Vector2D = require(\"../utils/Vector2D\");\r\n\r\n/**\r\n * `ForceDistanceConstraint` is a `Constraint` that constrains the distance between two particles.\r\n * It uses a force-based implementation and can be thought of as a spring between two particles.\r\n * In general, energy conservation is better at lower stiffness, and it can behave unstable or \r\n * energetically inconsistent at higher stiffness.\r\n */\r\nclass ForceDistanceConstraint extends Constraint {\r\n    /**\r\n     * Instantiates new `ForceDistanceConstraint`\r\n     * @param {Particle} c1 - particle 1\r\n     * @param {Particle} c2 - particle 2\r\n     * @param {Number} len - constrained length\r\n     * @param {Number} stiffness - the \"spring constant\", higher values are more stiff\r\n     * @param {Number} dampening - damping force on constraint, must be greater than 0\r\n     * @param {Number} breakForce - force at which the constraint breaks\r\n     */\r\n    constructor(c1, c2, len, stiffness, breakForce = Infinity, dampening = 0) {\r\n        super();\r\n        if (c1 === null || c2 === null) {\r\n            throw new Error(\"One of the particles is null!\");\r\n        }\r\n\t\tthis.c1 = c1;\r\n\t\tthis.c2 = c2;\r\n\t\tthis.breakForce = breakForce;\r\n\t\tthis.dampening = dampening;\r\n        this.stiffness = stiffness;\r\n\t\tthis.len = len;\r\n\r\n\t}\r\n\r\n    /**\r\n     * @override\r\n     * @param {Number} timeStep \r\n     */\r\n    update(timeStep) {\r\n        let dp = this.c1.pos.sub(this.c2.pos);\r\n        let dpMag = dp.mag();\r\n\r\n        dp.multTo(1 / dpMag);\r\n        let dxMag = dpMag - this.len;\r\n        let dv = this.c1.vel.sub(this.c2.vel);\r\n        let damp = this.dampening * dv.dot(dp);\r\n\r\n        this.force = dp.mult(-this.stiffness * dxMag - damp);\r\n\r\n        const a1 = this.force.mult(1 / this.c1.mass);\r\n        const a2 = this.force.mult(-1 / this.c2.mass);\r\n\r\n        a1.multTo(timeStep * timeStep);\r\n        a2.multTo(timeStep * timeStep);\r\n\r\n        //this.c1.pos = this.c1.pos.add(x1);\r\n        this.c1.pos.addTo(a1);\r\n        //this.c1.vel = this.c1.vel.add(a1.mult(timeStep));\r\n        //this.c2.pos = this.c2.pos.add(x2);\r\n        this.c2.pos.addTo(a2);\r\n        //this.c2.vel = this.c2.vel.add(a2.mult(timeStep));\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Vector2D[]}\r\n     */\r\n\tvertices() {\r\n        return [this.c1.pos, this.c2.pos];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Particle[]}\r\n     */\r\n    particles() {\r\n        return [this.c1, this.c2];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = ForceDistanceConstraint;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/constraints/ForceDistanceConstraint.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "Constraint",
    "memberof": "src/constraints/ForceDistanceConstraint.js",
    "static": true,
    "longname": "src/constraints/ForceDistanceConstraint.js~Constraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/ForceDistanceConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "Particle",
    "memberof": "src/constraints/ForceDistanceConstraint.js",
    "static": true,
    "longname": "src/constraints/ForceDistanceConstraint.js~Particle",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/ForceDistanceConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "Vector2D",
    "memberof": "src/constraints/ForceDistanceConstraint.js",
    "static": true,
    "longname": "src/constraints/ForceDistanceConstraint.js~Vector2D",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/ForceDistanceConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 91,
    "kind": "class",
    "name": "ForceDistanceConstraint",
    "memberof": "src/constraints/ForceDistanceConstraint.js",
    "static": true,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/ForceDistanceConstraint.js",
    "importStyle": null,
    "description": "`ForceDistanceConstraint` is a `Constraint` that constrains the distance between two particles.\nIt uses a force-based implementation and can be thought of as a spring between two particles.\nIn general, energy conservation is better at lower stiffness, and it can behave unstable or \nenergetically inconsistent at higher stiffness.",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "Constraint"
    ]
  },
  {
    "__docId__": 92,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#constructor",
    "access": null,
    "description": "Instantiates new `ForceDistanceConstraint`",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "c1",
        "description": "particle 1"
      },
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "c2",
        "description": "particle 2"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "len",
        "description": "constrained length"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "stiffness",
        "description": "the \"spring constant\", higher values are more stiff"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dampening",
        "description": "damping force on constraint, must be greater than 0"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "breakForce",
        "description": "force at which the constraint breaks"
      }
    ]
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "c1",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#c1",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "c2",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#c2",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "breakForce",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#breakForce",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "dampening",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#dampening",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "stiffness",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#stiffness",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "len",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#len",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "update",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#update",
    "access": null,
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "force",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#force",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "vertices",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#vertices",
    "access": null,
    "description": "",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "particles",
    "memberof": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/ForceDistanceConstraint.js~ForceDistanceConstraint#particles",
    "access": null,
    "description": "",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Particle[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Particle[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/constraints/ForcePivotConstraint.js",
    "content": "const Constraint = require(\"./Constraint\");\r\nconst Particle = require(\"../core/Particle\");\r\nconst Vector2D = require(\"../utils/Vector2D\");\r\n\r\n/**\r\n * `ForcePivotConstraint` is a `Constraint` that limits the motion of a particle to a certain length away from a \r\n * point in space. The implementation of this constraint is force-based like that of `ForceDistanceConstraint`.\r\n */\r\nclass ForcePivotConstraint extends Constraint {\r\n    /**\r\n     * Instantiates new `ForcePivotConstraint`\r\n     * @param {Vector2D} pos - position of pivot\r\n     * @param {Particle} c1 - constrained particle\r\n     * @param {Number} len - constrained length\r\n     * @param {Number} stiffness - the \"spring constant\", higher values are more stiff\r\n     * @param {Number} dampening - damping force on constraint, must be greater than 0\r\n     * @param {Number} breakForce - force at which the constraint breaks\r\n     */\r\n    constructor(pos, c1, len, stiffness, breakForce = Infinity, dampening = 0) {\r\n        super();\r\n        if (c1 === null) {\r\n            throw new Error(\"One of the particles is null!\");\r\n        }\r\n\t\tthis.pos = pos;\r\n\t\tthis.c1 = c1;\r\n\t\tthis.breakForce = breakForce;\r\n\t\tthis.dampening = dampening;\r\n        this.stiffness = stiffness;\r\n\t\tthis.len = len;\r\n        this.color = \"black\";\r\n\t\tthis.force = new Vector2D(0,0);\t\r\n\t}\r\n\r\n    /**\r\n     * @override\r\n     * @param {Number} timeStep \r\n     */\r\n    update(timeStep) {\r\n        let dp = this.c1.pos.sub(this.pos);\r\n        let dpMag = dp.mag();\r\n        if(dpMag != 0) {\r\n            dp.multTo(1 / dpMag);\r\n            let dxMag = dpMag - this.len;\r\n            let dv = this.c1.vel;\r\n            let damp = this.dampening * dv.dot(dp);\r\n\r\n            this.force = dp.mult(-this.stiffness * dxMag - damp);\r\n\r\n            const a1 = this.force.mult(1 / this.c1.mass);\r\n            a1.multTo(timeStep * timeStep);\r\n\r\n            this.c1.pos.addTo(a1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Vector2D[]}\r\n     */    \r\n\tvertices() {\r\n        return [this.pos, this.c1.pos];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Particle[]}\r\n     */\r\n    particles() {\r\n        return [this.c1];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = ForcePivotConstraint;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/constraints/ForcePivotConstraint.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "Constraint",
    "memberof": "src/constraints/ForcePivotConstraint.js",
    "static": true,
    "longname": "src/constraints/ForcePivotConstraint.js~Constraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/ForcePivotConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "Particle",
    "memberof": "src/constraints/ForcePivotConstraint.js",
    "static": true,
    "longname": "src/constraints/ForcePivotConstraint.js~Particle",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/ForcePivotConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "Vector2D",
    "memberof": "src/constraints/ForcePivotConstraint.js",
    "static": true,
    "longname": "src/constraints/ForcePivotConstraint.js~Vector2D",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/ForcePivotConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "ForcePivotConstraint",
    "memberof": "src/constraints/ForcePivotConstraint.js",
    "static": true,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/ForcePivotConstraint.js",
    "importStyle": null,
    "description": "`ForcePivotConstraint` is a `Constraint` that limits the motion of a particle to a certain length away from a \npoint in space. The implementation of this constraint is force-based like that of `ForceDistanceConstraint`.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Constraint"
    ]
  },
  {
    "__docId__": 108,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#constructor",
    "access": null,
    "description": "Instantiates new `ForcePivotConstraint`",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": "position of pivot"
      },
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "c1",
        "description": "constrained particle"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "len",
        "description": "constrained length"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "stiffness",
        "description": "the \"spring constant\", higher values are more stiff"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dampening",
        "description": "damping force on constraint, must be greater than 0"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "breakForce",
        "description": "force at which the constraint breaks"
      }
    ]
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "pos",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#pos",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "c1",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#c1",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "breakForce",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#breakForce",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "dampening",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#dampening",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "stiffness",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#stiffness",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "len",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#len",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "color",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#color",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "force",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#force",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "update",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#update",
    "access": null,
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "vertices",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#vertices",
    "access": null,
    "description": "",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "particles",
    "memberof": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/ForcePivotConstraint.js~ForcePivotConstraint#particles",
    "access": null,
    "description": "",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Particle[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Particle[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/constraints/PositionDistanceConstraint.js",
    "content": "const Constraint = require(\"./Constraint\");\r\nconst Particle = require(\"../core/Particle\");\r\nconst Vector2D = require(\"../utils/Vector2D\");\r\n\r\n/**\r\n * `PositionDistanceConstraint` is a `Constraint` that constrains the distance between two particles using a purely position-based method.\r\n * This implementation is more energetically stable; however, it is also less energy conservative and cannot be affected by damping. \r\n * The stiffness parameters are closer to a relaxation factor in [0,1]. Similar to other constraints, the stiffer this constraint, \r\n * the less energy conservative it becomes. There is no \"force\" attached to this type of constraint, so a pseudo-force value is arbitrary\r\n * calculated for any force based analysis.\r\n */\r\nclass PositionDistanceConstraint extends Constraint {\r\n\t/**\r\n\t * Instantiates new `PositionDistanceConstraint`\r\n     * @param {Particle} c1 - particle 1\r\n     * @param {Particle} c2 - particle 2\r\n\t * @param {Number} len - constrained length\r\n\t * @param {Number} stiffness - a relaxation parameter that is stable between [0,1] (higher is more stiff)\r\n\t * @param {Number} breakForce - force at which the constraint breaks\r\n\t */\r\n    constructor(c1, c2, len, stiffness, breakForce = Infinity) {\r\n        super();\r\n        if (c1 === null || c2 === null) {\r\n            throw new Error(\"One of the particles is null!\");\r\n        }\r\n\t\tthis.c1 = c1;\r\n\t\tthis.c2 = c2;\r\n\t\tthis.breakForce = breakForce;\r\n        this.stiffness = stiffness;\r\n\t\tthis.len = len;\r\n\t}\r\n\r\n\t/**\r\n     * @override\r\n     * @param {Number} timeStep \r\n     */\r\n    update(timeStep) {\r\n        let pos1 = this.c1.pos;\r\n        let pos2 = this.c2.pos;\r\n        let m1 = this.c1.mass;\r\n        let m2 = this.c2.mass;\r\n\r\n\t\tlet dp = pos2.sub(pos1);\r\n\t\tlet dpMag = dp.mag();\r\n\t\tlet dpDiff = (dpMag - this.len) * this.stiffness;\r\n\t\tdp.normalizeTo();\r\n\t\tdp.multTo(dpDiff);\r\n\t\tdp.multTo(1 / (m1 + m2));\r\n\r\n        // force values are made up\r\n\t\tthis.force = dp.mult((m1 + m2) * (m1 + m2) * 100 * this.stiffness);\r\n\r\n\t\tpos1.addTo(dp.mult(m1));\r\n\t\t//this.c1.vel = this.c1.vel.add(disP.mult(m1 / timeStep));\r\n\t\tpos2.subTo(dp.mult(m2));\r\n\t\t//this.c2.vel = this.c2.vel.add(disP.mult(m2 / timeStep));\r\n\t}\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Vector2D[]}\r\n     */\t\r\n\tvertices() {\r\n        return [this.c1.pos, this.c2.pos];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Particle[]}\r\n     */\r\n    particles() {\r\n        return [this.c1, this.c2];\r\n    }\r\n}\r\n\r\nmodule.exports = PositionDistanceConstraint;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/constraints/PositionDistanceConstraint.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "Constraint",
    "memberof": "src/constraints/PositionDistanceConstraint.js",
    "static": true,
    "longname": "src/constraints/PositionDistanceConstraint.js~Constraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/PositionDistanceConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "Particle",
    "memberof": "src/constraints/PositionDistanceConstraint.js",
    "static": true,
    "longname": "src/constraints/PositionDistanceConstraint.js~Particle",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/PositionDistanceConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "Vector2D",
    "memberof": "src/constraints/PositionDistanceConstraint.js",
    "static": true,
    "longname": "src/constraints/PositionDistanceConstraint.js~Vector2D",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/PositionDistanceConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "PositionDistanceConstraint",
    "memberof": "src/constraints/PositionDistanceConstraint.js",
    "static": true,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/PositionDistanceConstraint.js",
    "importStyle": null,
    "description": "`PositionDistanceConstraint` is a `Constraint` that constrains the distance between two particles using a purely position-based method.\nThis implementation is more energetically stable; however, it is also less energy conservative and cannot be affected by damping. \nThe stiffness parameters are closer to a relaxation factor in [0,1]. Similar to other constraints, the stiffer this constraint, \nthe less energy conservative it becomes. There is no \"force\" attached to this type of constraint, so a pseudo-force value is arbitrary\ncalculated for any force based analysis.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "Constraint"
    ]
  },
  {
    "__docId__": 126,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#constructor",
    "access": null,
    "description": "Instantiates new `PositionDistanceConstraint`",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "c1",
        "description": "particle 1"
      },
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "c2",
        "description": "particle 2"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "len",
        "description": "constrained length"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "stiffness",
        "description": "a relaxation parameter that is stable between [0,1] (higher is more stiff)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "breakForce",
        "description": "force at which the constraint breaks"
      }
    ]
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "c1",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#c1",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "c2",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#c2",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "breakForce",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#breakForce",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "stiffness",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#stiffness",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "len",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#len",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "update",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#update",
    "access": null,
    "description": "",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "force",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#force",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "vertices",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#vertices",
    "access": null,
    "description": "",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "particles",
    "memberof": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/PositionDistanceConstraint.js~PositionDistanceConstraint#particles",
    "access": null,
    "description": "",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Particle[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Particle[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/constraints/PositionPivotConstraint.js",
    "content": "const Constraint = require(\"./Constraint\");\r\nconst Particle = require(\"../core/Particle\");\r\nconst Vector2D = require(\"../utils/Vector2D\");\r\n\r\n/**\r\n * `PositionPivotConstraint` is a `Constraint` that limits the motion of a particle to a certain length away from a \r\n * point in space. The implementation of this constraint is position-based like that of `PositionDistanceConstraint`.\r\n */\r\nclass PositionPivotConstraint extends Constraint {\r\n\t/**\r\n\t * Instantiates new `PositionPivotConstraint`\r\n     * @param {Vector2D} pos - position of pivot\r\n     * @param {Particle} c1 - constrained particle\r\n\t * @param {Number} len - constrained length\r\n\t * @param {Number} stiffness - a relaxation parameter that is stable between [0,1] (higher is more stiff)\r\n\t * @param {Number} breakForce - force at which the constraint breaks\r\n\t */\r\n    constructor(pos, c1, len, stiffness, breakForce = Infinity) {\r\n        super();\r\n        if (c1 === null) {\r\n            throw new Error(\"One of the particles is null!\");\r\n        }\r\n\t\tthis.c1 = c1;\r\n\t\tthis.pos = pos;\r\n\t\tthis.breakForce = breakForce;\r\n        this.stiffness = stiffness;\r\n\t\tthis.len = len;\r\n\t}\r\n\r\n\t/**\r\n     * @override\r\n     * @param {Number} timeStep \r\n     */\r\n    update(timeStep) {\r\n        let pos1 = this.c1.pos;\r\n        let pos2 = this.pos;\r\n\r\n\t\tlet dp = pos2.sub(pos1);\r\n\t\tlet dpMag = dp.mag();\r\n        if (dpMag != 0) {\r\n            let dpDiff = (dpMag - this.len) * this.stiffness;\r\n            dp.normalizeTo();\r\n            dp.multTo(dpDiff);\r\n            this.force = dp.mult(this.c1.mass * 100 * this.stiffness);\r\n\r\n            pos1.addTo(dp);\r\n            //this.c1.vel = this.c1.vel.add(disP.mult(m1 / timeStep));\r\n        }\r\n\t}\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Vector2D[]}\r\n     */\t\r\n\tvertices() {\r\n        return [this.c1.pos, this.pos];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Particle[]}\r\n     */\r\n    particles() {\r\n        return [this.c1];\r\n    }\r\n}\r\n\r\nmodule.exports = PositionPivotConstraint;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/constraints/PositionPivotConstraint.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "Constraint",
    "memberof": "src/constraints/PositionPivotConstraint.js",
    "static": true,
    "longname": "src/constraints/PositionPivotConstraint.js~Constraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/PositionPivotConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "Particle",
    "memberof": "src/constraints/PositionPivotConstraint.js",
    "static": true,
    "longname": "src/constraints/PositionPivotConstraint.js~Particle",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/PositionPivotConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "Vector2D",
    "memberof": "src/constraints/PositionPivotConstraint.js",
    "static": true,
    "longname": "src/constraints/PositionPivotConstraint.js~Vector2D",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/PositionPivotConstraint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "PositionPivotConstraint",
    "memberof": "src/constraints/PositionPivotConstraint.js",
    "static": true,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/constraints/PositionPivotConstraint.js",
    "importStyle": null,
    "description": "`PositionPivotConstraint` is a `Constraint` that limits the motion of a particle to a certain length away from a \npoint in space. The implementation of this constraint is position-based like that of `PositionDistanceConstraint`.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Constraint"
    ]
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#constructor",
    "access": null,
    "description": "Instantiates new `PositionPivotConstraint`",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": "position of pivot"
      },
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "c1",
        "description": "constrained particle"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "len",
        "description": "constrained length"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "stiffness",
        "description": "a relaxation parameter that is stable between [0,1] (higher is more stiff)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "breakForce",
        "description": "force at which the constraint breaks"
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "c1",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#c1",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "pos",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#pos",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "breakForce",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#breakForce",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "stiffness",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#stiffness",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "len",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#len",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "update",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#update",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "force",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#force",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "vertices",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#vertices",
    "access": null,
    "description": "",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "particles",
    "memberof": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/constraints/PositionPivotConstraint.js~PositionPivotConstraint#particles",
    "access": null,
    "description": "",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Particle[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Particle[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "src/core/core.js",
    "content": "/**\r\n * Node module exports for the core directory\r\n */\r\n\r\nconst core = module.exports;\r\n\r\ncore.HashGridItem = require(\"./HashGridItem\");\r\ncore.Particle = require(\"./Particle\");\r\ncore.Solver = require(\"./Solver\");\r\ncore.SpatialHashGrid = require(\"./SpatialHashGrid\");\r\ncore.World = require(\"./World\");",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/core/core.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "core",
    "memberof": "src/core/core.js",
    "static": true,
    "longname": "src/core/core.js~core",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/core.js",
    "importStyle": null,
    "description": "Node module exports for the core directory",
    "lineNumber": 5
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "src/core/Particle.js",
    "content": "const HashGridItem = require(\"./HashGridItem\");\r\nconst Vector2D = require(\"../utils/Vector2D\");\r\nconst SelfBehavior = require(\"../behaviors/SelfBehavior\");\r\nconst NearBehavior = require(\"../behaviors/NearBehavior\");\r\n\r\n/**\r\n * `Particle` is the main object of this physics engine. It is a 2D circle that is treated like a point mass at the center\r\n * and does **not** rotate. `Particle` is also a `HashGridItem` so it can be added to a `SpatialHashGrid`.\r\n */\r\n\r\nclass Particle extends HashGridItem {\r\n\t/**\r\n\t * Instantiates new `Particle`\r\n\t * @param {Vector2D} pos cartesian coordinates of the particle\r\n\t * @param {Vector2D} vel velocity of the particle\r\n\t * @param {Number} mass \r\n\t * @param {Number} radius \r\n\t * @param {Number} bounciness a value in [0,1] that represents the amount of energy retained after collision\r\n\t * @param {Number} charge similar to real physical charge\r\n\t * @param {String} color currently only supports HTML canvas colors format\r\n\t */\r\n\tconstructor(pos, vel, mass, radius, bounciness = 1, charge = 0, color=\"black\") {\r\n        super();\r\n\t\tthis.charge = charge || 0;\r\n\t\tthis.pos = pos;\r\n\t\tthis.vel = vel || new Vector2D(0,0);\r\n        this.force = new Vector2D(0, 0);\r\n        this.mass = mass || 1;\r\n        this.originalMass = mass || 1;\r\n\t\tthis.radius = radius || 10;\r\n\t\tthis.bounciness = bounciness;\r\n\t\tthis.prevPos = this.pos;\r\n        this.color = color;\r\n\t\tthis.nearBehavior = [];\r\n\t\tthis.selfBehavior = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the position by velocity `v`\r\n\t * @param {Vector2D} v \r\n\t * @param {Number} timeStep \r\n\t */\r\n\tapplyVelocity(v, timeStep) {\r\n\t\tthis.pos.addTo(v.mult(timeStep));\r\n\t}\r\n\r\n\t/**\r\n\t * Applies force `f` to the velocity\r\n\t * @param {Vector2D} f \r\n\t * @param {Number} timeStep \r\n\t */\r\n    applyForce(f, timeStep) {\r\n\t\tthis.vel.addTo(f.mult(timeStep / this.mass));\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the velocity by an acceleration `a`\r\n\t * @param {Vector2D} a \r\n\t * @param {Number} timeStep \r\n\t */\r\n\tapplyAcceleration(a, timeStep) {\r\n\t\tthis.vel.addTo(a.mult(timeStep));\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a `SelfBehavior` to the particle\r\n\t * @param {SelfBehavior} b \r\n\t */\r\n\taddSelfBehavior(b) {\r\n\t\tthis.selfBehavior.push(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a `NearBehavior` to the particle\r\n\t * @param {NearBehavior} b \r\n\t */\r\n\taddNearBehavior(b) {\r\n\t\tthis.nearBehavior.push(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes `NearBehavior` `b` if the particle has `b`  \r\n\t * @param {NearBehavior} b \r\n\t * @returns {Boolean} true if the action is successful\r\n\t */\r\n\tremoveNearBehavior(b) {\r\n\t\tconst index = this.nearBehavior.indexOf(b);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.nearBehavior.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes `SelfBehavior` `b` if the particle has `b`  \r\n\t * @param {SelfBehavior} b \r\n\t * @returns {Boolean} true if the action is successful\r\n\t */\r\n\tremoveSelfBehavior(b) {\r\n\t\tconst index = this.selfBehavior.indexOf(b);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.selfBehavior.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all behaviors of the particle\r\n\t */\r\n\tclearBehaviors() {\r\n\t\tthis.nearBehavior = [];\r\n\t\tthis.selfBehavior = [];\r\n\t}\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Number[]} \r\n     */\r\n\tgetHashPos() {\r\n\t\treturn [this.pos.x, this.pos.y];\r\n\t}\r\n\r\n    /**\r\n     * @override\r\n     * @returns {Number[]} \r\n     */\r\n\tgetHashDimensions() {\r\n\t\treturn [this.radius * 2, this.radius * 2];\r\n\t}\r\n}\r\n\r\nmodule.exports = Particle;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/core/Particle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "HashGridItem",
    "memberof": "src/core/Particle.js",
    "static": true,
    "longname": "src/core/Particle.js~HashGridItem",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Particle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "Vector2D",
    "memberof": "src/core/Particle.js",
    "static": true,
    "longname": "src/core/Particle.js~Vector2D",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Particle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "SelfBehavior",
    "memberof": "src/core/Particle.js",
    "static": true,
    "longname": "src/core/Particle.js~SelfBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Particle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "NearBehavior",
    "memberof": "src/core/Particle.js",
    "static": true,
    "longname": "src/core/Particle.js~NearBehavior",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Particle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 158,
    "kind": "class",
    "name": "Particle",
    "memberof": "src/core/Particle.js",
    "static": true,
    "longname": "src/core/Particle.js~Particle",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Particle.js",
    "importStyle": null,
    "description": "`Particle` is the main object of this physics engine. It is a 2D circle that is treated like a point mass at the center\nand does **not** rotate. `Particle` is also a `HashGridItem` so it can be added to a `SpatialHashGrid`.",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "HashGridItem"
    ]
  },
  {
    "__docId__": 159,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#constructor",
    "access": null,
    "description": "Instantiates new `Particle`",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": "cartesian coordinates of the particle"
      },
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vel",
        "description": "velocity of the particle"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "mass",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bounciness",
        "description": "a value in [0,1] that represents the amount of energy retained after collision"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "charge",
        "description": "similar to real physical charge"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "currently only supports HTML canvas colors format"
      }
    ]
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "charge",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#charge",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "pos",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#pos",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "vel",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#vel",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "force",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#force",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "mass",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#mass",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "originalMass",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#originalMass",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "radius",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#radius",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "bounciness",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#bounciness",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "prevPos",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#prevPos",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "color",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#color",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "nearBehavior",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#nearBehavior",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "selfBehavior",
    "memberof": "src/core/Particle.js~Particle",
    "static": false,
    "longname": "src/core/Particle.js~Particle#selfBehavior",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "applyVelocity",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#applyVelocity",
    "access": null,
    "description": "Increments the position by velocity `v`",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "applyForce",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#applyForce",
    "access": null,
    "description": "Applies force `f` to the velocity",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "applyAcceleration",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#applyAcceleration",
    "access": null,
    "description": "Increments the velocity by an acceleration `a`",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "addSelfBehavior",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#addSelfBehavior",
    "access": null,
    "description": "Adds a `SelfBehavior` to the particle",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "SelfBehavior"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "addNearBehavior",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#addNearBehavior",
    "access": null,
    "description": "Adds a `NearBehavior` to the particle",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "NearBehavior"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "removeNearBehavior",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#removeNearBehavior",
    "access": null,
    "description": "Removes `NearBehavior` `b` if the particle has `b`  ",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} true if the action is successful"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "NearBehavior"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true if the action is successful"
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "removeSelfBehavior",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#removeSelfBehavior",
    "access": null,
    "description": "Removes `SelfBehavior` `b` if the particle has `b`  ",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} true if the action is successful"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SelfBehavior"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true if the action is successful"
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "clearBehaviors",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#clearBehaviors",
    "access": null,
    "description": "Clears all behaviors of the particle",
    "lineNumber": 112
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "getHashPos",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#getHashPos",
    "access": null,
    "description": "",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number[]} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "getHashDimensions",
    "memberof": "src/core/Particle.js~Particle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Particle.js~Particle#getHashDimensions",
    "access": null,
    "description": "",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number[]} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 184,
    "kind": "file",
    "name": "src/core/Solver.js",
    "content": "const Constraint = require(\"../constraints/Constraint\");\r\nconst Wall = require(\"../walls/Wall\");\r\nconst Particle = require(\"./Particle\");\r\nconst SpatialHashGrid = require(\"./SpatialHashGrid\");\r\n\r\n/**\r\n * `Solver` is the discrete solver algorithm that calculates the movement of the physics world. It uses a modified \r\n * predictive-corrective semi-implicit Euler implementation. Because this is a local iterative solver, there may be \r\n * divergence issues at higher timeSteps and convergence can be tuned with the iterationPerFrame.\r\n */\r\nclass Solver {\r\n    /**\r\n     * Instantiates new `Solver`\r\n     * @param {Number} timeStep the change in time per frame (smaller is more accurate)\r\n     * @param {Number} iterationPerFrame the amount of time the solver is called per frame (**not** substepping, timeStep remains constant)\r\n     * @param {Number} constraintIteration the amount of times the constraints are solved per frame\r\n     * @param {SpatialHashGrid} particles SpatialHashGrid of particles\r\n     * @param {Constraint[]} constraints list of constraints\r\n     * @param {Wall[]} walls list of walls\r\n     */\r\n    constructor(timeStep, iterationPerFrame, constraintIteration, particles, constraints, walls) {\r\n        this.timeStep = timeStep;\r\n        this.iterationPerFrame = iterationPerFrame;\r\n        this.particles = particles;\r\n        this.constraints = constraints;\r\n        this.constraintIteration = constraintIteration;\r\n        this.run = true;\r\n        this.particles = particles;\r\n        this.particleList = this.particles.values();\r\n        this.walls = walls;\r\n    }\r\n\r\n    /**\r\n     * Solves one iteration of the current physics world\r\n     */\r\n    solve() {\r\n        // calculate future pos and store current pos as previous pos\r\n        // apply behaviors, any forces, and corrections\r\n        // calculate constraint correction based on current position\r\n        // apply correction, set forces to 0, apply velocity to get final pos.\r\n        // there might be duplicate processes... i think i need to fix that\r\n        this.preMove();\r\n        this.handleWallCollisions();\r\n        this.update();\r\n        this.handleBehaviors();\r\n        this.handleConstraints();\r\n        this.updateVelocity();\r\n        this.positionCorrection();\r\n    }\r\n\r\n    /**\r\n     * Optional function that can be defined to exhibit certain behavior in the solve loop.\r\n     */\r\n    update(){\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Move particle positions forward to the \"future-position\"\r\n     */\r\n    preMove() {\r\n        for (let circ of this.particleList) {\r\n            circ.prevPos = circ.pos;\r\n            circ.pos = circ.pos.add(circ.vel.mult(this.timeStep));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Solve physics interactions from Behaviors\r\n     */\r\n    handleBehaviors() {\r\n        for (let circ of this.particleList) {\r\n\r\n            for (let sb of circ.selfBehavior) {\r\n                sb.applyBehavior(circ, this.timeStep);\r\n            }\r\n\r\n            for (let nb of circ.nearBehavior) {\r\n                nb.applyBehavior(circ, this.timeStep, this.particles.findNear(circ, nb.range()));\r\n            }       \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Solve physics interactions from Constraints\r\n     */\r\n    handleConstraints() {\r\n        let dt = this.timeStep / this.constraintIteration;\r\n        for (let i = 0; i < this.constraintIteration; i++) {\r\n            for (let c of this.constraints) {\r\n                c.update(dt);\r\n                if (c.breakForce !== (null || Infinity) && c.force.mag() > c.breakForce) {\r\n                    const index = this.constraints.indexOf(c);\r\n                    if (index > -1) {\r\n                        this.constraints.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Solve collision interactions with Walls\r\n     */\r\n    handleWallCollisions() {\r\n        for (let wall of this.walls) {\r\n            wall.resolveCollisions(this.particles.findNear(wall), this.timeStep);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update final particle velocities\r\n     */\r\n    updateVelocity() {\r\n        for (let circ of this.particleList) {\r\n            circ.vel = circ.pos.sub(circ.prevPos).mult(1 / this.timeStep);\r\n            this.particles.updateItem(circ);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Correct particle positions \r\n     */\r\n    positionCorrection() {\r\n\r\n        for (let circ of this.particleList) {\r\n\r\n            for (let sb of circ.selfBehavior) {\r\n                sb.applyCorrection(circ);\r\n            }\r\n\r\n            for (let nb of circ.nearBehavior) {\r\n                nb.applyCorrection(circ, this.particles.findNear(circ, nb.range()));\r\n            }       \r\n        }\r\n   \r\n\r\n        for (let wall of this.walls) {\r\n            wall.applyCorrection(this.particles.findNear(wall));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Computes next frame or \"world-state\"\r\n     */\r\n    nextFrame() {\r\n        for (let i = 0; i < this.iterationPerFrame; i++) {\r\n            this.solve();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the particle positions in the SpatialHashGrid\r\n     */\r\n    updateSolverParticles() {\r\n        this.particleList = this.particles.values();\r\n    }\r\n}\r\n\r\nmodule.exports = Solver;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/core/Solver.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 185,
    "kind": "variable",
    "name": "Constraint",
    "memberof": "src/core/Solver.js",
    "static": true,
    "longname": "src/core/Solver.js~Constraint",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Solver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "Wall",
    "memberof": "src/core/Solver.js",
    "static": true,
    "longname": "src/core/Solver.js~Wall",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Solver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 187,
    "kind": "variable",
    "name": "Particle",
    "memberof": "src/core/Solver.js",
    "static": true,
    "longname": "src/core/Solver.js~Particle",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Solver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "SpatialHashGrid",
    "memberof": "src/core/Solver.js",
    "static": true,
    "longname": "src/core/Solver.js~SpatialHashGrid",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Solver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 189,
    "kind": "class",
    "name": "Solver",
    "memberof": "src/core/Solver.js",
    "static": true,
    "longname": "src/core/Solver.js~Solver",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/Solver.js",
    "importStyle": null,
    "description": "`Solver` is the discrete solver algorithm that calculates the movement of the physics world. It uses a modified \npredictive-corrective semi-implicit Euler implementation. Because this is a local iterative solver, there may be \ndivergence issues at higher timeSteps and convergence can be tuned with the iterationPerFrame.",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 190,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#constructor",
    "access": null,
    "description": "Instantiates new `Solver`",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": "the change in time per frame (smaller is more accurate)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "iterationPerFrame",
        "description": "the amount of time the solver is called per frame (**not** substepping, timeStep remains constant)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "constraintIteration",
        "description": "the amount of times the constraints are solved per frame"
      },
      {
        "nullable": null,
        "types": [
          "SpatialHashGrid"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": "SpatialHashGrid of particles"
      },
      {
        "nullable": null,
        "types": [
          "Constraint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "constraints",
        "description": "list of constraints"
      },
      {
        "nullable": null,
        "types": [
          "Wall[]"
        ],
        "spread": false,
        "optional": false,
        "name": "walls",
        "description": "list of walls"
      }
    ]
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "timeStep",
    "memberof": "src/core/Solver.js~Solver",
    "static": false,
    "longname": "src/core/Solver.js~Solver#timeStep",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "iterationPerFrame",
    "memberof": "src/core/Solver.js~Solver",
    "static": false,
    "longname": "src/core/Solver.js~Solver#iterationPerFrame",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "particles",
    "memberof": "src/core/Solver.js~Solver",
    "static": false,
    "longname": "src/core/Solver.js~Solver#particles",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "constraints",
    "memberof": "src/core/Solver.js~Solver",
    "static": false,
    "longname": "src/core/Solver.js~Solver#constraints",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "constraintIteration",
    "memberof": "src/core/Solver.js~Solver",
    "static": false,
    "longname": "src/core/Solver.js~Solver#constraintIteration",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "run",
    "memberof": "src/core/Solver.js~Solver",
    "static": false,
    "longname": "src/core/Solver.js~Solver#run",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "particleList",
    "memberof": "src/core/Solver.js~Solver",
    "static": false,
    "longname": "src/core/Solver.js~Solver#particleList",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "walls",
    "memberof": "src/core/Solver.js~Solver",
    "static": false,
    "longname": "src/core/Solver.js~Solver#walls",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "solve",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#solve",
    "access": null,
    "description": "Solves one iteration of the current physics world",
    "lineNumber": 36
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "update",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#update",
    "access": null,
    "description": "Optional function that can be defined to exhibit certain behavior in the solve loop.",
    "lineNumber": 54
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "preMove",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#preMove",
    "access": null,
    "description": "Move particle positions forward to the \"future-position\"",
    "lineNumber": 61
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "handleBehaviors",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#handleBehaviors",
    "access": null,
    "description": "Solve physics interactions from Behaviors",
    "lineNumber": 71
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "handleConstraints",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#handleConstraints",
    "access": null,
    "description": "Solve physics interactions from Constraints",
    "lineNumber": 87
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "handleWallCollisions",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#handleWallCollisions",
    "access": null,
    "description": "Solve collision interactions with Walls",
    "lineNumber": 105
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "updateVelocity",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#updateVelocity",
    "access": null,
    "description": "Update final particle velocities",
    "lineNumber": 114
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "positionCorrection",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#positionCorrection",
    "access": null,
    "description": "Correct particle positions ",
    "lineNumber": 124
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "nextFrame",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#nextFrame",
    "access": null,
    "description": "Computes next frame or \"world-state\"",
    "lineNumber": 146
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "updateSolverParticles",
    "memberof": "src/core/Solver.js~Solver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Solver.js~Solver#updateSolverParticles",
    "access": null,
    "description": "Update the particle positions in the SpatialHashGrid",
    "lineNumber": 155
  },
  {
    "__docId__": 211,
    "kind": "file",
    "name": "src/core/World.js",
    "content": "const RectangularWorldBoundary = require(\"../walls/RectangularWorldBoundary\");\r\nconst Collision = require(\"../behaviors/Collision\");\r\nconst SpatialHashGrid = require(\"../core/SpatialHashGrid\");\r\nconst Solver = require(\"../core/Solver\");\r\nconst Renderer = require(\"../renderers/Renderer\");\r\nconst Gravity = require(\"../behaviors/Gravity\");\r\nconst Particle = require(\"./Particle\");\r\n\r\n/**\r\n * `World` the global-state instance of the physics engine that keeps track of all the objects. This provides\r\n * a higher level of abstraction from the user but may be limiting in some ways. It is a good idea to extend and \r\n * override this class for any specific properties. With the current SpatialHashing algorithm, the world should have\r\n * finite bounds.\r\n */\r\nclass World {\r\n    /**\r\n     * Instantiates new `World` instance\r\n     * @param {HTMLCanvasElement} canvas HTML canvas where the elements are displayed\r\n     * @param {Number} width width of world\r\n     * @param {Number} height height of world\r\n     * @param {Number} xGrids integer number of grid separations in the x direction\r\n     * @param {Number} yGrids integer number of grid separations in the y direction\r\n     * @param {Number} timeStep change in time per solve iteration\r\n     * @param {Number} iterationPerFrame number of solve iterations per frame\r\n     * @param {Number} constraintIteration number of times constraints are solved per iteration\r\n     */\r\n    constructor(canvas, width, height, xGrids, yGrids = null, timeStep = 1, iterationPerFrame = 1, constraintIteration = 1) {\r\n        this.timeStep = timeStep;\r\n        this.iterationPerFrame = iterationPerFrame;\r\n        this.constraintIteration = constraintIteration;\r\n        this.canvas = canvas;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.xGrids = xGrids;\r\n        this.yGrids = yGrids;\r\n        this.gravity = null;\r\n        \r\n        this.particles = new SpatialHashGrid(width, height, xGrids, yGrids);\r\n        this.particlesList = [];\r\n        this.constraints = [];\r\n        this.walls = [];\r\n        \r\n        this.solver = new Solver(this.timeStep, this.iterationPerFrame, this.constraintIteration, this.particles, this.constraints, this.walls);\r\n        this.renderer = new Renderer(this.solver, this.canvas);\r\n\r\n        this.isRender = true;\r\n    }\r\n\r\n    /**\r\n     * Adds a particle to the world\r\n     * @param {Particle} p \r\n     */\r\n    addParticle(p) {\r\n        this.particles.add(p);\r\n        this.updateParticleList();\r\n    }\r\n\r\n    /**\r\n     * Removes a particle from the world\r\n     * @param {Particle} p\r\n     */\r\n    removeParticle(p) {\r\n        this.particles.deleteItem(p);\r\n        let removeCons = [];\r\n        for (let c of this.constraints) {\r\n            if (c.particles().includes(p)) {\r\n                removeCons.push(c) \r\n            }\r\n        }\r\n\r\n        for (let c of removeCons) {\r\n            this.removeConstraint(c);\r\n        }\r\n        \r\n        this.updateParticleList();\r\n    }\r\n\r\n    /**\r\n     * Adds a constraint to the world\r\n     * @param {Constraint} c \r\n     */\r\n    addConstraint(c) {\r\n        this.constraints.push(c);\r\n    }\r\n\r\n    /**\r\n     * Removes a constraint from the world\r\n     * @param {Constraint} c \r\n     * @returns {Boolean} true if the constraint is removed\r\n     */\r\n    removeConstraint(c) {\r\n        const index = this.constraints.indexOf(c);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.constraints.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n    }\r\n\r\n    /**\r\n     * Adds a wall to the world\r\n     * @param {Wall} w \r\n     */\r\n    addWall(w) {\r\n        this.walls.push(w);\r\n    }\r\n\r\n    removeWall(w) {\r\n        const index = this.walls.indexOf(w);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.walls.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n    }\r\n\r\n    /**\r\n     * Clears all of the particles and constraints\r\n     */\r\n    clearParticles() {\r\n        this.particles = new SpatialHashGrid(this.width, this.height, this.xGrids, this.yGrids);\r\n        this.solver.particles = this.particles;\r\n        this.clearConstraints();\r\n        this.updateParticleList();\r\n    }\r\n\r\n    /**\r\n     * Clears all of the constraints\r\n     */\r\n    clearConstraints() {\r\n        this.constraints = [];\r\n        this.solver.constraints = this.constraints;\r\n        this.updateParticleList();\r\n    }\r\n\r\n    clearWalls() {\r\n        this.walls = [];\r\n        this.solver.walls = [];\r\n    }\r\n\r\n    /**\r\n     * Update the list of particles. Must be called every time the number of particles change.\r\n     */\r\n    updateParticleList() {\r\n        this.particlesList = this.particles.values();\r\n        this.solver.updateSolverParticles();\r\n    }\r\n\r\n    /**\r\n     * Adds a SelfBehavior to all the particles\r\n     * @param {SelfBehavior} b \r\n     */\r\n    addGlobalSelfBehavior(b) {\r\n        for (let p of this.particlesList) {\r\n            p.addSelfBehavior(b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a SelfBehavior from all the particles\r\n     * @param {SelfBehavior} b \r\n     */\r\n    removeGlobalSelfBehavior(b) {\r\n        for (let p of this.particlesList) {\r\n            p.removeSelfBehavior(b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a NearBehavior to all the particles\r\n     * @param {NearBehavior} b \r\n     */\r\n    addGlobalNearBehavior(b) {\r\n        for (let p of this.particlesList) {\r\n            p.addNearBehavior(b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a NearBehavior to all the particles\r\n     * @param {NearBehavior} b \r\n     */\r\n    removeGlobalNearBehavior(b) {\r\n        for (let p of this.particlesList) {\r\n            p.removeNearBehavior(b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disables gravity and adds a new global gravity behavior to all the particles, while updating \r\n     * the gravity pointer\r\n     * @param {Number} num \r\n     */\r\n    enableGravity(num) {\r\n        if (this.gravity) {\r\n            this.disableGravity();\r\n        }\r\n        this.gravity = new Gravity(new Vector2D(0, num));\r\n        this.addGlobalSelfBehavior(this.gravity);\r\n    }\r\n\r\n    /**\r\n     * Removes the global gravity behavior\r\n     * @returns {Boolean} true if gravity is successfully disabled\r\n     */\r\n    disableGravity() {\r\n        if (this.gravity) {\r\n            this.removeGlobalSelfBehavior(this.gravity);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Progresses world to next area\r\n     */\r\n    nextFrame() {\r\n        this.solver.nextFrame();\r\n        if (this.isRender) {\r\n            this.renderer.renderFrame();\r\n        }\r\n    }\r\n\r\n    enableCollisions() {\r\n        if (this.collision) {\r\n            this.disableCollisions();\r\n        }\r\n        this.collision = new Collision();\r\n        this.addGlobalNearBehavior(this.collision);\r\n    }\r\n\r\n    disableCollisions() {\r\n        if (this.collision) {\r\n            this.removeGlobalNearBehavior(this.collision);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // TODO: implement rayCasting for line obstacle support\r\n    constrainBoundary(x1= -Infinity, x2= Infinity, y1= -Infinity, y2= Infinity) {\r\n        this.worldConstraint = new RectangularWorldBoundary(x1, x2, y1, y2);\r\n        this.walls.push(this.worldConstraint);\r\n    }\r\n\r\n    enableDrag(viscosity) {\r\n        if (this.dragBehavior) {\r\n            this.disableDrag();\r\n        }\r\n        this.dragBehavior = new Drag(viscosity);\r\n        this.addGlobalSelfBehavior(this.dragBehavior);\r\n    }\r\n\r\n    disableDrag() {\r\n        if (this.dragBehavior) {\r\n            this.removeGlobalSelfBehavior(this.dragBehavior);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    enableChargeInteractions() {\r\n        if(this.chargeBehavior) {\r\n           this.disableChargeInteractions();\r\n        }\r\n        this.chargeBehavior = new ChargeInteraction();\r\n        this.addGlobalNearBehavior(this.chargeBehavior);\r\n    }\r\n\r\n    disableChargeInteractions() {\r\n        if (this.chargeBehavior) {\r\n            this.removeGlobalSelfBehavior(this.chargeBehavior);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    makePivot(p, pos=null) {\r\n        // this is incredibly scuffed, but this is what i could think of without introducing high cohesion\r\n        for (let b of p.selfBehavior) {\r\n            console.log(b);\r\n            if(b instanceof PositionLock) {\r\n                return false;\r\n            }\r\n        }\r\n        p.mass = p.mass + Number.MAX_SAFE_INTEGER / 10;\r\n        if(pos === null) {\r\n            p.addSelfBehavior(new PositionLock(p.pos));\r\n        } else {\r\n            p.addSelfBehavior(new PositionLock(pos));\r\n        }\r\n        return true;\r\n    }\r\n\r\n    freePivot(p) {\r\n        for (let b of p.selfBehavior) {\r\n            if(b instanceof PositionLock) {\r\n                p.mass = p.mass - Number.MAX_SAFE_INTEGER / 10;\r\n                p.removeSelfBehavior(b);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Function} update \r\n     */\r\n    setSolverUpdate(update) {\r\n        this.solver.update = update;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = World;\r\n",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/core/World.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 212,
    "kind": "variable",
    "name": "RectangularWorldBoundary",
    "memberof": "src/core/World.js",
    "static": true,
    "longname": "src/core/World.js~RectangularWorldBoundary",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/World.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "Collision",
    "memberof": "src/core/World.js",
    "static": true,
    "longname": "src/core/World.js~Collision",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/World.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 214,
    "kind": "variable",
    "name": "SpatialHashGrid",
    "memberof": "src/core/World.js",
    "static": true,
    "longname": "src/core/World.js~SpatialHashGrid",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/World.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "name": "Solver",
    "memberof": "src/core/World.js",
    "static": true,
    "longname": "src/core/World.js~Solver",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/World.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 216,
    "kind": "variable",
    "name": "Renderer",
    "memberof": "src/core/World.js",
    "static": true,
    "longname": "src/core/World.js~Renderer",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/World.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 217,
    "kind": "variable",
    "name": "Gravity",
    "memberof": "src/core/World.js",
    "static": true,
    "longname": "src/core/World.js~Gravity",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/World.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 218,
    "kind": "variable",
    "name": "Particle",
    "memberof": "src/core/World.js",
    "static": true,
    "longname": "src/core/World.js~Particle",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/World.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 219,
    "kind": "class",
    "name": "World",
    "memberof": "src/core/World.js",
    "static": true,
    "longname": "src/core/World.js~World",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/core/World.js",
    "importStyle": null,
    "description": "`World` the global-state instance of the physics engine that keeps track of all the objects. This provides\na higher level of abstraction from the user but may be limiting in some ways. It is a good idea to extend and \noverride this class for any specific properties. With the current SpatialHashing algorithm, the world should have\nfinite bounds.",
    "lineNumber": 15,
    "interface": false
  },
  {
    "__docId__": 220,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#constructor",
    "access": null,
    "description": "Instantiates new `World` instance",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": "HTML canvas where the elements are displayed"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "width of world"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "height of world"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "xGrids",
        "description": "integer number of grid separations in the x direction"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "yGrids",
        "description": "integer number of grid separations in the y direction"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": "change in time per solve iteration"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "iterationPerFrame",
        "description": "number of solve iterations per frame"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "constraintIteration",
        "description": "number of times constraints are solved per iteration"
      }
    ]
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "timeStep",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#timeStep",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "iterationPerFrame",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#iterationPerFrame",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "constraintIteration",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#constraintIteration",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "canvas",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#canvas",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "width",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#width",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "height",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#height",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "xGrids",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#xGrids",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "yGrids",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#yGrids",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "gravity",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#gravity",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 230,
    "kind": "member",
    "name": "particles",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#particles",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "particlesList",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#particlesList",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "constraints",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#constraints",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "walls",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#walls",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "solver",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#solver",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "renderer",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#renderer",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "isRender",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#isRender",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "addParticle",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#addParticle",
    "access": null,
    "description": "Adds a particle to the world",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "p",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "removeParticle",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#removeParticle",
    "access": null,
    "description": "Removes a particle from the world",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "p",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "addConstraint",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#addConstraint",
    "access": null,
    "description": "Adds a constraint to the world",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "Constraint"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "removeConstraint",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#removeConstraint",
    "access": null,
    "description": "Removes a constraint from the world",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} true if the constraint is removed"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Constraint"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true if the constraint is removed"
    }
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "addWall",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#addWall",
    "access": null,
    "description": "Adds a wall to the world",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "removeWall",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#removeWall",
    "access": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "clearParticles",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#clearParticles",
    "access": null,
    "description": "Clears all of the particles and constraints",
    "lineNumber": 120
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "clearConstraints",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#clearConstraints",
    "access": null,
    "description": "Clears all of the constraints",
    "lineNumber": 130
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "clearWalls",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#clearWalls",
    "access": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "updateParticleList",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#updateParticleList",
    "access": null,
    "description": "Update the list of particles. Must be called every time the number of particles change.",
    "lineNumber": 144
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "addGlobalSelfBehavior",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#addGlobalSelfBehavior",
    "access": null,
    "description": "Adds a SelfBehavior to all the particles",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "SelfBehavior"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "removeGlobalSelfBehavior",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#removeGlobalSelfBehavior",
    "access": null,
    "description": "Removes a SelfBehavior from all the particles",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "SelfBehavior"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "addGlobalNearBehavior",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#addGlobalNearBehavior",
    "access": null,
    "description": "Adds a NearBehavior to all the particles",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "NearBehavior"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "removeGlobalNearBehavior",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#removeGlobalNearBehavior",
    "access": null,
    "description": "Removes a NearBehavior to all the particles",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "NearBehavior"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "enableGravity",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#enableGravity",
    "access": null,
    "description": "Disables gravity and adds a new global gravity behavior to all the particles, while updating \nthe gravity pointer",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "disableGravity",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#disableGravity",
    "access": null,
    "description": "Removes the global gravity behavior",
    "lineNumber": 206,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} true if gravity is successfully disabled"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true if gravity is successfully disabled"
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "nextFrame",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#nextFrame",
    "access": null,
    "description": "Progresses world to next area",
    "lineNumber": 217
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "enableCollisions",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#enableCollisions",
    "access": null,
    "description": null,
    "lineNumber": 224,
    "undocument": true
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "collision",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#collision",
    "access": null,
    "description": null,
    "lineNumber": 228,
    "undocument": true
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "disableCollisions",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#disableCollisions",
    "access": null,
    "description": null,
    "lineNumber": 232,
    "undocument": true
  },
  {
    "__docId__": 262,
    "kind": "method",
    "name": "constrainBoundary",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#constrainBoundary",
    "access": null,
    "description": null,
    "lineNumber": 241,
    "undocument": true
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "worldConstraint",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#worldConstraint",
    "access": null,
    "description": null,
    "lineNumber": 242,
    "undocument": true
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "enableDrag",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#enableDrag",
    "access": null,
    "description": null,
    "lineNumber": 246,
    "undocument": true
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "dragBehavior",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#dragBehavior",
    "access": null,
    "description": null,
    "lineNumber": 250,
    "undocument": true
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "disableDrag",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#disableDrag",
    "access": null,
    "description": null,
    "lineNumber": 254,
    "undocument": true
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "enableChargeInteractions",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#enableChargeInteractions",
    "access": null,
    "description": null,
    "lineNumber": 262,
    "undocument": true
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "chargeBehavior",
    "memberof": "src/core/World.js~World",
    "static": false,
    "longname": "src/core/World.js~World#chargeBehavior",
    "access": null,
    "description": null,
    "lineNumber": 266,
    "undocument": true
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "disableChargeInteractions",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#disableChargeInteractions",
    "access": null,
    "description": null,
    "lineNumber": 270,
    "undocument": true
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "makePivot",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#makePivot",
    "access": null,
    "description": null,
    "lineNumber": 278,
    "undocument": true
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "freePivot",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#freePivot",
    "access": null,
    "description": null,
    "lineNumber": 295,
    "undocument": true
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "setSolverUpdate",
    "memberof": "src/core/World.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/World.js~World#setSolverUpdate",
    "access": null,
    "description": "",
    "lineNumber": 310,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "update",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/module/lisence.js",
    "content": "/**\r\n * The MIT License (MIT)\r\n * \r\n * Copyright (c) Hanson Sun.\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/module/lisence.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "src/module/module.js",
    "content": "/**\r\n * Node module encapsulation and export for entire physics engine\r\n */\r\n\r\nconst pphys = module.exports;\r\n\r\npphys.utils = require(\"../utils/utils\");\r\npphys.constraints = require(\"../constraints/constraints\");\r\npphys.walls = require(\"../walls/walls\");\r\npphys.core = require(\"../core/core\");\r\npphys.behaviors = require(\"../behaviors/behaviors\");\r\npphys.renderers = require(\"../renderers/renderers\");\r\n\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/module/module.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "pphys",
    "memberof": "src/module/module.js",
    "static": true,
    "longname": "src/module/module.js~pphys",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/module/module.js",
    "importStyle": null,
    "description": "Node module encapsulation and export for entire physics engine",
    "lineNumber": 5
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "src/renderers/ConstraintRenderer.js",
    "content": "class ConstraintRenderer {\r\n\r\n    constructor(solver, context) {\r\n        this.solver = solver;\r\n        this.context = context;\r\n        this.color = \"black\"\r\n        this.context.strokeStyle = this.color;\r\n        this.showStress = false;\r\n    }\r\n\r\n    // call this anytime a new particle is added\r\n    renderFrame() {\r\n        for (let c of this.solver.constraints) {\r\n            this.draw(c);\r\n        }\r\n    }\r\n\r\n\tdraw(c) {\r\n        let vertices = c.vertices();\r\n        if (vertices.length > 1) {\r\n            this.context.beginPath();\r\n            this.context.moveTo(vertices[0].x, vertices[0].y);\r\n            for (let i = 1; i < vertices.length; i++) {\r\n                let vertex = vertices[i];\r\n                this.context.lineTo(vertex.x, vertex.y);\r\n            }\r\n            this.context.stroke();\r\n        }\r\n\t}\r\n\r\n    static calculateStressColor(c, maxForce, min=0, sensitivity = 2) {\r\n\r\n        let r = sensitivity * (c.force.mag() - min) / (maxForce - min) * 510;\r\n        if (r <= 255) {\r\n            return \"rgb(\" + Math.floor(r) + \", 255,0)\";\r\n        } else if (r <= 510) {\r\n            return \"rgb(255,\" + (510 - Math.floor(r)) + \",0)\";\r\n        } else {\r\n            return \"rgb(255,0,0)\";\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = ConstraintRenderer;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/renderers/ConstraintRenderer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "class",
    "name": "ConstraintRenderer",
    "memberof": "src/renderers/ConstraintRenderer.js",
    "static": true,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/renderers/ConstraintRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 278,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 279,
    "kind": "member",
    "name": "solver",
    "memberof": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "static": false,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer#solver",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 280,
    "kind": "member",
    "name": "context",
    "memberof": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "static": false,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer#context",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 281,
    "kind": "member",
    "name": "color",
    "memberof": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "static": false,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer#color",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 282,
    "kind": "member",
    "name": "showStress",
    "memberof": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "static": false,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer#showStress",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "renderFrame",
    "memberof": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer#renderFrame",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "draw",
    "memberof": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer#draw",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "calculateStressColor",
    "memberof": "src/renderers/ConstraintRenderer.js~ConstraintRenderer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/renderers/ConstraintRenderer.js~ConstraintRenderer.calculateStressColor",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 286,
    "kind": "file",
    "name": "src/renderers/ParticleRenderer.js",
    "content": "class ParticleRenderer {\r\n\r\n    constructor(solver, context) {\r\n        this.solver = solver;\r\n        this.context = context;\r\n    }\r\n\r\n    // call this anytime a new particle is added\r\n    renderFrame() {\r\n        for (let p of this.solver.particleList) {\r\n            this.draw(p);\r\n        }\r\n    }\r\n\r\n\tdraw(p) {\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc(p.pos.x, p.pos.y, p.radius, 0, Math.PI * 2, false);\r\n\t\tthis.context.strokeStyle = p.color;\r\n\t\tthis.context.fillStyle = p.color;\r\n\t\tthis.context.stroke();\r\n        \r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = ParticleRenderer;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/renderers/ParticleRenderer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 287,
    "kind": "class",
    "name": "ParticleRenderer",
    "memberof": "src/renderers/ParticleRenderer.js",
    "static": true,
    "longname": "src/renderers/ParticleRenderer.js~ParticleRenderer",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/renderers/ParticleRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 288,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/renderers/ParticleRenderer.js~ParticleRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/ParticleRenderer.js~ParticleRenderer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 289,
    "kind": "member",
    "name": "solver",
    "memberof": "src/renderers/ParticleRenderer.js~ParticleRenderer",
    "static": false,
    "longname": "src/renderers/ParticleRenderer.js~ParticleRenderer#solver",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 290,
    "kind": "member",
    "name": "context",
    "memberof": "src/renderers/ParticleRenderer.js~ParticleRenderer",
    "static": false,
    "longname": "src/renderers/ParticleRenderer.js~ParticleRenderer#context",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "renderFrame",
    "memberof": "src/renderers/ParticleRenderer.js~ParticleRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/ParticleRenderer.js~ParticleRenderer#renderFrame",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "draw",
    "memberof": "src/renderers/ParticleRenderer.js~ParticleRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/ParticleRenderer.js~ParticleRenderer#draw",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 293,
    "kind": "file",
    "name": "src/renderers/Renderer.js",
    "content": "const ConstraintRenderer = require(\"./ConstraintRenderer\");\r\nconst ParticleRenderer = require(\"./ParticleRenderer\");\r\nconst WallRenderer = require(\"./WallRenderer\");\r\n\r\nclass Renderer {\r\n    constructor(solver, canvas) {\r\n        this.solver = solver;\r\n        this.canvas = canvas;\r\n        this.context = this.canvas.getContext(\"2d\");\r\n        this.constraintRenderer = new ConstraintRenderer(solver, this.context);\r\n        this.particleRenderer = new ParticleRenderer(solver, this.context);\r\n        this.wallRenderer = new WallRenderer(solver, this.context);\r\n    }\r\n\r\n    // call this anytime a new particle is added\r\n    updateRendererParticles(list) {\r\n        this.particleRenderer.particles = list;\r\n    }\r\n\r\n    updateContext(context) {\r\n        this.constraintRenderer.context = context;\r\n        this.particleRenderer.context = context;\r\n    }\r\n\r\n    renderFrame() {\r\n        this.clear();\r\n        this.particleRenderer.renderFrame();\r\n        this.constraintRenderer.renderFrame();\r\n        this.wallRenderer.renderFrame();\r\n    }\r\n\r\n    clear() {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}\r\n\r\nmodule.exports = Renderer;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/renderers/Renderer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "ConstraintRenderer",
    "memberof": "src/renderers/Renderer.js",
    "static": true,
    "longname": "src/renderers/Renderer.js~ConstraintRenderer",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/renderers/Renderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "ParticleRenderer",
    "memberof": "src/renderers/Renderer.js",
    "static": true,
    "longname": "src/renderers/Renderer.js~ParticleRenderer",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/renderers/Renderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "WallRenderer",
    "memberof": "src/renderers/Renderer.js",
    "static": true,
    "longname": "src/renderers/Renderer.js~WallRenderer",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/renderers/Renderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 297,
    "kind": "class",
    "name": "Renderer",
    "memberof": "src/renderers/Renderer.js",
    "static": true,
    "longname": "src/renderers/Renderer.js~Renderer",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/renderers/Renderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 298,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 299,
    "kind": "member",
    "name": "solver",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#solver",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "canvas",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#canvas",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "context",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#context",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "constraintRenderer",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#constraintRenderer",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "particleRenderer",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#particleRenderer",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "wallRenderer",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#wallRenderer",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "updateRendererParticles",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#updateRendererParticles",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "updateContext",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#updateContext",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "renderFrame",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#renderFrame",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "clear",
    "memberof": "src/renderers/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/Renderer.js~Renderer#clear",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 309,
    "kind": "file",
    "name": "src/renderers/renderers.js",
    "content": "/**\r\n * Node module exports for the renderers directory\r\n */\r\n\r\nconst renderers = module.exports;\r\n\r\nrenderers.Renderer = require(\"./Renderer\");\r\nrenderers.ParticleRenderer = require(\"./ParticleRenderer\");\r\nrenderers.ConstraintRenderer = require(\"./ConstraintRenderer\");\r\nrenderers.WallRenderer = require(\"./WallRenderer\");",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/renderers/renderers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "variable",
    "name": "renderers",
    "memberof": "src/renderers/renderers.js",
    "static": true,
    "longname": "src/renderers/renderers.js~renderers",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/renderers/renderers.js",
    "importStyle": null,
    "description": "Node module exports for the renderers directory",
    "lineNumber": 5
  },
  {
    "__docId__": 311,
    "kind": "file",
    "name": "src/renderers/WallRenderer.js",
    "content": "class WallRenderer {\r\n\r\n    constructor(solver, context) {\r\n        this.solver = solver;\r\n        this.context = context;\r\n        this.color = \"black\"\r\n        this.context.strokeStyle = this.color;\r\n    }\r\n\r\n    // call this anytime a new particle is added\r\n    renderFrame() {\r\n        for (let w of this.solver.walls) {\r\n            this.draw(w);\r\n        }\r\n    }\r\n\r\n\tdraw(w) {\r\n        let vertices = w.vertices();\r\n        if (vertices.length >= 1) {\r\n            this.context.beginPath();\r\n            this.context.moveTo(vertices[0].x, vertices[0].y);\r\n            vertices.pop();\r\n            for (let _ of vertices) {\r\n                this.context.lineTo(w.p2.x, w.p2.y);\r\n            }\r\n            this.context.stroke();\r\n        }\r\n\r\n\t}\r\n}\r\n\r\nmodule.exports = WallRenderer;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/renderers/WallRenderer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 312,
    "kind": "class",
    "name": "WallRenderer",
    "memberof": "src/renderers/WallRenderer.js",
    "static": true,
    "longname": "src/renderers/WallRenderer.js~WallRenderer",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/renderers/WallRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 313,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/renderers/WallRenderer.js~WallRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/WallRenderer.js~WallRenderer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "solver",
    "memberof": "src/renderers/WallRenderer.js~WallRenderer",
    "static": false,
    "longname": "src/renderers/WallRenderer.js~WallRenderer#solver",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "context",
    "memberof": "src/renderers/WallRenderer.js~WallRenderer",
    "static": false,
    "longname": "src/renderers/WallRenderer.js~WallRenderer#context",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "color",
    "memberof": "src/renderers/WallRenderer.js~WallRenderer",
    "static": false,
    "longname": "src/renderers/WallRenderer.js~WallRenderer#color",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "renderFrame",
    "memberof": "src/renderers/WallRenderer.js~WallRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/WallRenderer.js~WallRenderer#renderFrame",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "draw",
    "memberof": "src/renderers/WallRenderer.js~WallRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/renderers/WallRenderer.js~WallRenderer#draw",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 319,
    "kind": "file",
    "name": "src/test.js",
    "content": "\r\n// TODO: test collisions and add constraints\r\n// also constrain boundaries.\r\n\r\n// BRUH SOMETHING IS WRONG WITH GRAVITY --> implementation of addTo is kind of messed up\r\n// wait why... i dont get it....\r\n\r\nconst canvas = document.getElementById(\"test\");\r\nconst width = 700;\r\nconst height = 700;\r\nconst c = canvas.getContext(\"2d\");\r\ncanvas.width = width;\r\ncanvas.height = height;\r\n\r\nconst world = new World(canvas, width, height, 20, 20, 0.02, 1, 10);\r\n\r\nconst pos = new Vector2D(350, 100);\r\nconst pos2 = new Vector2D(350, 400);\r\nconst vel = new Vector2D(0, 0);\r\nconst vel2 = new Vector2D(0, 2);\r\nconst vel3 = new Vector2D(0, -10);\r\n\r\nconst mag = 0.5;\r\nconst mass = 10;\r\nconst bounce = 1;\r\n\r\nfor (let i = 0; i < 0; i++) {\r\n    let s1 = Math.random() < 0.5 ? -1 : 1;\r\n    let s2 = Math.random() < 0.5 ? -1 : 1;\r\n    let v = new Vector2D(s1 * mag * Math.random(), s2 * mag * Math.random());\r\n    let p = new Vector2D((width - 50) * Math.random() + 25, (height - 50) * Math.random() + 25);\r\n    let part = new Particle(p, v, mass, 6, bounce, 0);\r\n    world.addParticle(part);\r\n}\r\n\r\nconst pt = new Particle(pos, vel, mass, 15, bounce, 0);\r\nconst pt2 = new Particle(pos2, vel3, 10, 15, bounce, 0);\r\n\r\n\r\n\r\nworld.addParticle(pt);\r\nworld.addParticle(pt2);\r\n//pt2.mass = 10000000000000000;\r\n//pt2.addSelfBehavior(new PositionLock(pos2));\r\n//world.makePivot(pt2);\r\n\r\nv = new Vector2D(0, -2);\r\n\r\n\r\nconst cons = new ForceDistanceConstraint(pt, pt2, 200, 10000);\r\n//world.addConstraint(cons);\r\n\r\nworld.addConstraint(new PositionPivotConstraint(pos2, pt2, 0, 0.1));\r\n//softBody();\r\n\r\nworld.enableGravity(0.4);\r\n//world.addWall(new WallBoundary(250, 310, 600, 300));\r\n//world.addWall(new WallBoundary(50, 690, 650, 690));\r\n// world.addWall(new WallBoundary(0, 700, 700, 700));\r\n// world.addWall(new WallBoundary(0, 0, 0, 700));\r\n// world.addWall(new WallBoundary(700, 0, 700, 700));\r\nworld.enableCollisions();\r\nworld.constrainBoundary(0, width, 0, height);\r\n//world.enableDrag(100);\r\n//world.enableChargeInteractions();\r\n\r\nlet count = 0;\r\nworld.setSolverUpdate(\r\n    () => {\r\n        if (Collision.isCollide(pt, pt2)) {\r\n            count += 1;\r\n            console.log(count);\r\n        }\r\n    }\r\n)\r\n\r\n\r\nsetInterval(function () {\r\n    world.nextFrame();\r\n\r\n    for (let p of world.particles.findNear(pt)) {\r\n        c.beginPath();\r\n        c.arc(p.pos.x, p.pos.y, p.radius, 0, Math.PI * 2, false);\r\n        c.fillStyle = \"blue\";\r\n        c.fill();\r\n    }\r\n\r\n    for (let cons of world.constraints) {\r\n        c.strokeStyle  = ConstraintRenderer.calculateStressColor(cons, cons.breakForce, 0, 4);\r\n        world.renderer.constraintRenderer.draw(cons);\r\n        c.strokeStyle  = \"black\"\r\n    }\r\n\r\n    c.beginPath();\r\n    c.arc(pt2.pos.x, pt2.pos.y, pt2.radius, 0, Math.PI * 2, false);\r\n    c.fillStyle = \"green\";\r\n    c.fill();\r\n}, 1);\r\n\r\n\r\nfunction softBody() {\r\n    dampen = 0;\r\n    grid = [];\r\n    size = 15;\r\n    w = 20;\r\n    stiffness = 1000;\r\n    radius = 8;\r\n    constraint = ForceDistanceConstraint;\r\n    breakForce = 10000;\r\n\r\n    for (row = 0; row < size; row++) {\r\n        r = [];\r\n        for (col = 0; col < size; col++) {\r\n            v = new Vector2D(0, 0);\r\n            p2 = new Vector2D(50 + col * w, 50 + row * w);\r\n            circ = new Particle(p2, v, 10, radius, 1);\r\n            r.push(circ);\r\n            world.addParticle(circ);\r\n\r\n        }\r\n        grid.push(r);\r\n    }\r\n\r\n    for (row = 0; row < size; row++) {\r\n        for (col = 0; col < size; col++) {\r\n            if (row + 1 < size) {\r\n                let c = new constraint(grid[row + 1][col], grid[row][col], w, stiffness, 0, breakForce);\r\n                world.addConstraint(c);\r\n            }\r\n            if (col + 1 < size) {\r\n                let c = new constraint(grid[row][col], grid[row][col + 1], w, stiffness, 0, breakForce);\r\n                world.addConstraint(c);\r\n            }\r\n            if (row + 1 < size && col + 1 < size) {\r\n                let c1 = new constraint(grid[row][col], grid[row + 1][col + 1], 2 ** 0.5 * w, stiffness, 0, breakForce);\r\n                let c2 = new constraint(grid[row + 1][col], grid[row][col + 1], 2 ** 0.5 * w, stiffness, 0, breakForce);\r\n                world.addConstraint(c1);\r\n                world.addConstraint(c2);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 320,
    "kind": "variable",
    "name": "canvas",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~canvas",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 321,
    "kind": "variable",
    "name": "width",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~width",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 322,
    "kind": "variable",
    "name": "height",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~height",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 323,
    "kind": "variable",
    "name": "c",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~c",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 324,
    "kind": "variable",
    "name": "world",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~world",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 325,
    "kind": "variable",
    "name": "pos",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~pos",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 326,
    "kind": "variable",
    "name": "pos2",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~pos2",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 327,
    "kind": "variable",
    "name": "vel",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~vel",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 328,
    "kind": "variable",
    "name": "vel2",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~vel2",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "name": "vel3",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~vel3",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 330,
    "kind": "variable",
    "name": "mag",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~mag",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 331,
    "kind": "variable",
    "name": "mass",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~mass",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 332,
    "kind": "variable",
    "name": "bounce",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~bounce",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 333,
    "kind": "variable",
    "name": "pt",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~pt",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 334,
    "kind": "variable",
    "name": "pt2",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~pt2",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 335,
    "kind": "variable",
    "name": "cons",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~cons",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 336,
    "kind": "variable",
    "name": "count",
    "memberof": "src/test.js",
    "static": true,
    "longname": "src/test.js~count",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "softBody",
    "memberof": "src/test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/test.js~softBody",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 338,
    "kind": "file",
    "name": "src/utils/utils.js",
    "content": "/**\r\n * Node module exports for the utils directory (i think ill add more later...)\r\n */\r\n\r\nconst utils = module.exports\r\n\r\nutils.Vector2D = require(\"./Vector2D\");\r\nutils.InputHandler = require(\"./InputHandler\");",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/utils/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 339,
    "kind": "variable",
    "name": "utils",
    "memberof": "src/utils/utils.js",
    "static": true,
    "longname": "src/utils/utils.js~utils",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/utils/utils.js",
    "importStyle": null,
    "description": "Node module exports for the utils directory (i think ill add more later...)",
    "lineNumber": 5
  },
  {
    "__docId__": 340,
    "kind": "file",
    "name": "src/utils/Vector2D.js",
    "content": "/**\r\n * Vector2D is a light-weight 2D vector class that implements several vector operations.\r\n * \r\n * **Note**: modifying \"to\" methods that do not return a new Vector2D are more efficient.\r\n */\r\nclass Vector2D {\r\n\t/**\r\n\t * @constructor instantiate a new Vector2D.\r\n\t * @param {number} x \r\n\t * @param {number} y \r\n\t */\r\n\tconstructor(x, y) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new added vector denoted by `this + v`.\r\n\t * @param {Vector2D} v vector to be added\r\n\t * @returns {Vector2D} \r\n\t */\r\n\tadd(v) {\r\n\t\treturn new Vector2D(this.x + v.x, this.y + v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * adds a vector to the current vector (`this = this + v`).\r\n\t * @modifies this\r\n\t * @param {Vector2D} v \r\n\t */\r\n\taddTo(v) {\r\n\t\tthis.x = this.x + v.x;\r\n\t\tthis.y = this.y + v.y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new subtracted vector denoted by `this - v`.\r\n\t * @param {Vector2D} v vector to be added\r\n\t * @returns {Vector2D} \r\n\t */\r\n\tsub(v) {\r\n\t\treturn new Vector2D(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * subtracts a vector to the current vector (`this = this - v`).\r\n\t * @modifies this\r\n\t * @param {Vector2D} v \r\n\t */\r\n\tsubTo(v) {\r\n\t\tthis.x = this.x - v.x;\r\n\t\tthis.y = this.y - v.y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new scalar-multiplied vector denoted by `this * a`.\r\n\t * @param {number} a scalar multiple\r\n\t * @returns {Vector2D} \r\n\t */\t\r\n\tmult(a) {\r\n\t\treturn new Vector2D(this.x * a, this.y * a);\r\n\t}\r\n\r\n\t/**\r\n\t * multiplies a scalar to the current vector (`this = this * a`).\r\n\t * @modifies this\r\n\t * @param {number} a \r\n\t */\t\r\n\tmultTo(a) {\r\n\t\tthis.x = this.x * a;\r\n\t\tthis.y = this.y * a;\r\n\t}\r\n\r\n\t/**\r\n\t * returns the dot product of two vectors (`this` and `v`).\r\n\t * @param {Vector2D} v  \r\n\t * @returns {number}\r\n\t */\r\n\tdot(v) {\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns the \"cross-product\" of two vectors (`this` and `v`). Since these are 2D vectors, this is the \r\n\t * z-coordinate of the 3D counter parts of these 2D vectors. It returns a scalar.\r\n\t * @param {Vector2D} v \r\n\t * @returns {number}\r\n\t */\r\n\tcross(v) {\r\n\t\treturn this.x * v.y - v.x * this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns the magnitude of the vector.\r\n\t * @returns {number}\r\n\t */\r\n\tmag() {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * returns the magnitude squared of the vector.\r\n\t * @returns {number}\r\n\t */\r\n\tmagSqr() {\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new normalized Vector2D.\r\n\t * @returns {Vector2D}\r\n\t */\r\n\tnormalize() {\r\n\t\tconst mag = Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\treturn new Vector2D(this.x / mag, this.y / mag);\r\n\t}\r\n\r\n\t/**\r\n\t * normalizes the `this` Vector2D.\r\n\t * @modifies this\r\n\t */\r\n\tnormalizeTo() {\r\n\t\tconst mag = Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\tthis.x = this.x / mag;\r\n\t\tthis.y = this.y / mag;\r\n\t}\r\n\r\n\t/**\r\n\t * return the angle between `this` and v.  \r\n\t * @param {Vector2D} v \r\n\t * @param {boolean} type  default set to `true` to return radians. Setting to false will return `degrees`.\r\n\t * @returns {number}\r\n\t */\r\n\tangleBetween(v, type = true) {\r\n\t\tconst dot = this.x * v.x + this.y * v.y;\r\n\t\tconst mag1 = ((this.x ** 2) + (this.y ** 2)) ** 0.5;\r\n\t\tconst mag2 = ((v.x ** 2) + (v.y ** 2)) ** 0.5;\r\n\t\tif (type) {\r\n\t\t\treturn Math.acos(dot / mag1 / mag2);\r\n\t\t}\r\n\t\treturn Math.acos(dot / mag1 / mag2) * 180 / Math.PI;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the mirror reflection for `this` about a normal vector.\r\n\t * @param {Vector2D} normal \r\n\t * @returns Vector2D\r\n\t */\r\n\treflect(normal) {\r\n\t\tlet dot2 = 2 * (this.x * normal.x + this.y * normal.y);\r\n\t\tlet x = this.x - normal.x * dot2;\r\n\t\tlet y = this.y - normal.y * dot2;\r\n\t\treturn new Vector2D(x, y);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the mirror reflection for `this` about a normal vector. (modifies self)\r\n\t * @param {Vector2D} normal \r\n\t */\r\n\treflectTo(normal) {\r\n\t\tlet dot2 = 2 * (this.x * normal.x + this.y * normal.y);\r\n\t\tthis.x = this.x - normal.x * dot2;\r\n\t\tthis.y = this.y - normal.y * dot2;\r\n\t}\r\n}\r\n\r\nmodule.exports = Vector2D;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/utils/Vector2D.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 341,
    "kind": "class",
    "name": "Vector2D",
    "memberof": "src/utils/Vector2D.js",
    "static": true,
    "longname": "src/utils/Vector2D.js~Vector2D",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/utils/Vector2D.js",
    "importStyle": null,
    "description": "Vector2D is a light-weight 2D vector class that implements several vector operations.\n\n**Note**: modifying \"to\" methods that do not return a new Vector2D are more efficient.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 342,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#constructor",
    "access": null,
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": "instantiate a new Vector2D."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 343,
    "kind": "member",
    "name": "x",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#x",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 344,
    "kind": "member",
    "name": "y",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#y",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "add",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#add",
    "access": null,
    "description": "returns a new added vector denoted by `this + v`.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "vector to be added"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "addTo",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#addTo",
    "access": null,
    "description": "adds a vector to the current vector (`this = this + v`).",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@modifies",
        "tagValue": "this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "sub",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#sub",
    "access": null,
    "description": "returns a new subtracted vector denoted by `this - v`.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "vector to be added"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "subTo",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#subTo",
    "access": null,
    "description": "subtracts a vector to the current vector (`this = this - v`).",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@modifies",
        "tagValue": "this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "mult",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#mult",
    "access": null,
    "description": "returns a new scalar-multiplied vector denoted by `this * a`.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "scalar multiple"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "multTo",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#multTo",
    "access": null,
    "description": "multiplies a scalar to the current vector (`this = this * a`).",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@modifies",
        "tagValue": "this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "dot",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#dot",
    "access": null,
    "description": "returns the dot product of two vectors (`this` and `v`).",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "cross",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#cross",
    "access": null,
    "description": "returns the \"cross-product\" of two vectors (`this` and `v`). Since these are 2D vectors, this is the \nz-coordinate of the 3D counter parts of these 2D vectors. It returns a scalar.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "mag",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#mag",
    "access": null,
    "description": "returns the magnitude of the vector.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "magSqr",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#magSqr",
    "access": null,
    "description": "returns the magnitude squared of the vector.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "normalize",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#normalize",
    "access": null,
    "description": "returns a new normalized Vector2D.",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "normalizeTo",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#normalizeTo",
    "access": null,
    "description": "normalizes the `this` Vector2D.",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@modifies",
        "tagValue": "this"
      }
    ]
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "angleBetween",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#angleBetween",
    "access": null,
    "description": "return the angle between `this` and v.  ",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "default set to `true` to return radians. Setting to false will return `degrees`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "reflect",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#reflect",
    "access": null,
    "description": "Performs the mirror reflection for `this` about a normal vector.",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Vector2D"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "normal",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Vector2D"
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "reflectTo",
    "memberof": "src/utils/Vector2D.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/Vector2D.js~Vector2D#reflectTo",
    "access": null,
    "description": "Performs the mirror reflection for `this` about a normal vector. (modifies self)",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "normal",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 370,
    "kind": "file",
    "name": "src/walls/RectangularWorldBoundary.js",
    "content": "const Wall = require(\"./Wall\");\r\n\r\n/**\r\n * `RectangularWorldBoundary` is a rectangular bounding box that constrains all particles *within* the boundaries.\r\n * The implementation uses a strict uni-directional constraint, and particles cannot escape the world boundaries. \r\n * Since the boundary is strict, the current implementation checks **all** particles contained in the boundaries, not\r\n * just particles surrounding the edge.\r\n */\r\nclass RectangularWorldBoundary extends Wall {\r\n\r\n    /**\r\n     * \r\n     * @param {Number} minW left x position (smaller value)\r\n     * @param {Number} maxW right x position (larger value)\r\n     * @param {Number} minH top y position (smaller value)\r\n     * @param {Number} maxH bottom y position (larger value)\r\n     */\r\n    constructor(minW, maxW, minH, maxH) {\r\n        super();\r\n        this.minW = minW;\r\n        this.maxW = maxW;\r\n        this.minH = minH;\r\n        this.maxH = maxH;        \r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle[]} particles \r\n     * @param {Number} timeStep \r\n     */    \r\n    resolveCollisions(particles, timeStep) {\r\n        for (let particle of particles) {\r\n            const posX = particle.pos.x;\r\n            const posY = particle.pos.y;\r\n            const radius = particle.radius;\r\n            const bounce = particle.bounciness;\r\n            const velX = particle.vel.x;\r\n            const velY = particle.vel.y;\r\n            \r\n            if (posX > this.maxW - radius) {\r\n                particle.vel.x = velX * -1 * bounce;\r\n                particle.pos.x = posX +  2 * velX * -1 * bounce * timeStep;\r\n            } \r\n\r\n            if (posX < this.minW + radius) {\r\n                particle.vel.x = velX * -1 * bounce;\r\n                particle.pos.x = posX +  2 * velX * -1 * bounce * timeStep;\r\n            } \r\n\r\n            if (posY > this.maxH - radius) {\r\n                particle.vel.y = velY * -1 * bounce;\r\n                particle.pos.y = posY + 2 * velY * -1 * bounce * timeStep;\r\n            } \r\n\r\n            if (posY < this.minH + radius) {\r\n                particle.vel.y = velY * -1 * bounce;\r\n                particle.pos.y = posY + 2 * velY * -1 * bounce * timeStep;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle[]} particles \r\n     */\r\n    applyCorrection(particles) {\r\n        for (let particle of particles) {\r\n            const radius = particle.radius;\r\n            if (particle.pos.x > this.maxW - radius) {\r\n                particle.pos.x = this.maxW - radius;\r\n            }\r\n\r\n            if (particle.pos.x < this.minW + radius) {\r\n                particle.pos.x = this.minW + radius;\r\n            }\r\n\r\n            if (particle.pos.y > this.maxH - radius) {\r\n                particle.pos.y = this.maxH - radius;\r\n            }\r\n\r\n            if (particle.pos.y < this.minH + radius) {\r\n                particle.pos.y = this.minH + radius;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if a Particle is colliding with the Wall\r\n     * @param {Particle} particle \r\n     * @returns {Boolean} true if particle is colliding with wall\r\n     */\r\n    isCollide(particle) {\r\n        const posX = particle.pos.x;\r\n        const posY = particle.pos.y;\r\n        const radius = particle.radius;\r\n        \r\n        return  (posX >= this.maxW - radius) || (posX <= this.minW + radius) || \r\n                (posY >= this.maxH - radius) || (posY <= this.minH + radius) || \r\n                (particle.pos.x >= this.maxW - radius) || (particle.pos.x <= this.minW + radius) || \r\n                (particle.pos.y >= this.maxH - radius) || (particle.pos.y <= this.minH + radius)\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {[Number, Number]} \r\n     */    \r\n    getHashPos() {\r\n        return [(this.maxW + this.minW) / 2, (this.maxH + this.minH) / 2];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {[Number, Number]} \r\n     */\r\n    getHashDimensions() {\r\n        return [this.maxW - this.minW + 1, this.maxH - this.minH + 1];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {[Vector2D, Vector2D]} \r\n     */    \r\n    vertices() {\r\n        return [];\r\n    }\r\n}\r\n\r\nmodule.exports = RectangularWorldBoundary;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/walls/RectangularWorldBoundary.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 371,
    "kind": "variable",
    "name": "Wall",
    "memberof": "src/walls/RectangularWorldBoundary.js",
    "static": true,
    "longname": "src/walls/RectangularWorldBoundary.js~Wall",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/walls/RectangularWorldBoundary.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 372,
    "kind": "class",
    "name": "RectangularWorldBoundary",
    "memberof": "src/walls/RectangularWorldBoundary.js",
    "static": true,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/walls/RectangularWorldBoundary.js",
    "importStyle": null,
    "description": "`RectangularWorldBoundary` is a rectangular bounding box that constrains all particles *within* the boundaries.\nThe implementation uses a strict uni-directional constraint, and particles cannot escape the world boundaries. \nSince the boundary is strict, the current implementation checks **all** particles contained in the boundaries, not\njust particles surrounding the edge.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Wall"
    ]
  },
  {
    "__docId__": 373,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#constructor",
    "access": null,
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "minW",
        "description": "left x position (smaller value)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxW",
        "description": "right x position (larger value)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "minH",
        "description": "top y position (smaller value)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxH",
        "description": "bottom y position (larger value)"
      }
    ]
  },
  {
    "__docId__": 374,
    "kind": "member",
    "name": "minW",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#minW",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 375,
    "kind": "member",
    "name": "maxW",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#maxW",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 376,
    "kind": "member",
    "name": "minH",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#minH",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 377,
    "kind": "member",
    "name": "maxH",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#maxH",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "resolveCollisions",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#resolveCollisions",
    "access": null,
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#applyCorrection",
    "access": null,
    "description": "",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "isCollide",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#isCollide",
    "access": null,
    "description": "Checks if a Particle is colliding with the Wall",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} true if particle is colliding with wall"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true if particle is colliding with wall"
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "getHashPos",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#getHashPos",
    "access": null,
    "description": "",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Number, Number]} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Number, Number]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "getHashDimensions",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#getHashDimensions",
    "access": null,
    "description": "",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Number, Number]} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Number, Number]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "vertices",
    "memberof": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/RectangularWorldBoundary.js~RectangularWorldBoundary#vertices",
    "access": null,
    "description": "",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Vector2D, Vector2D]} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Vector2D, Vector2D]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 384,
    "kind": "file",
    "name": "src/walls/Wall.js",
    "content": "const HashGridItem = require(\"../core/HashGridItem\");\r\n\r\n/**\r\n * `Wall` is an Interface for any wall objects. Walls are `HashGridItems`; however, it only uses the SpatialHashGrid methods\r\n * that calculate the particles in its close proximity and **cannot** be added to the grid itself. Wall objects\r\n * are also stationary and are not influenced by any external factors.\r\n * @interface\r\n */\r\nclass Wall extends HashGridItem {\r\n    /**\r\n     * Instantiates new `Wall`\r\n     */\r\n    constructor() {\r\n        super();\r\n        if (this.constructor == Wall) {\r\n            throw new Error(\"Wall interface class cannot be instantiated.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resolve the collisions between the surrounding particles and the Wall itself.\r\n     * @param {Particle[]} particles surrounding particles that interact with the wall \r\n     * @param {Number} timeStep \r\n     */\r\n    resolveCollisions(particles, timeStep) {\r\n        throw new Error(\"Method 'resolveCollisions()' must be implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Applies positional corrections on particles (walls do not move)\r\n     * @param {Particle[]} particles \r\n     */\r\n    applyCorrection(particles) {\r\n        throw new Error(\"Method 'applyCorrection()' must be implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Calculates the vertices of the wall\r\n     * @returns {Vector2D[]}\r\n     */\r\n    vertices() {\r\n        throw new Error(\"Method 'vertices()' must be implemented.\");\r\n    }\r\n}\r\n\r\nmodule.exports = Wall;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/walls/Wall.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 385,
    "kind": "variable",
    "name": "HashGridItem",
    "memberof": "src/walls/Wall.js",
    "static": true,
    "longname": "src/walls/Wall.js~HashGridItem",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/walls/Wall.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 386,
    "kind": "class",
    "name": "Wall",
    "memberof": "src/walls/Wall.js",
    "static": true,
    "longname": "src/walls/Wall.js~Wall",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/walls/Wall.js",
    "importStyle": null,
    "description": "`Wall` is an Interface for any wall objects. Walls are `HashGridItems`; however, it only uses the SpatialHashGrid methods\nthat calculate the particles in its close proximity and **cannot** be added to the grid itself. Wall objects\nare also stationary and are not influenced by any external factors.",
    "lineNumber": 9,
    "interface": true,
    "extends": [
      "HashGridItem"
    ]
  },
  {
    "__docId__": 387,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/walls/Wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/Wall.js~Wall#constructor",
    "access": null,
    "description": "Instantiates new `Wall`",
    "lineNumber": 13
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "resolveCollisions",
    "memberof": "src/walls/Wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/Wall.js~Wall#resolveCollisions",
    "access": null,
    "description": "Resolve the collisions between the surrounding particles and the Wall itself.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": "surrounding particles that interact with the wall"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 389,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/walls/Wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/Wall.js~Wall#applyCorrection",
    "access": null,
    "description": "Applies positional corrections on particles (walls do not move)",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "vertices",
    "memberof": "src/walls/Wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/Wall.js~Wall#vertices",
    "access": null,
    "description": "Calculates the vertices of the wall",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 391,
    "kind": "file",
    "name": "src/walls/WallBoundary.js",
    "content": "const Vector2D = require(\"../utils/Vector2D\");\r\nconst Wall = require(\"./Wall\");\r\n\r\n/**\r\n * `WallBoundary` is a simple `Wall` that is comprised of a straight-line between two spatial coordinates. Wall positions\r\n * are generally meant to be immutable since the normal vector is calculated upon instantiation. However, wall position\r\n * can be modified with some care.\r\n */\r\nclass WallBoundary extends Wall {\r\n\r\n    /**\r\n     * Instantiates new `WallBoundary`\r\n     * @param {*} x1 x-position of first vertex\r\n     * @param {*} y1 y-position of first vertex\r\n     * @param {*} x2 x-position of second vertex\r\n     * @param {*} y2 y-position of second vertex\r\n     * @param {*} width rendered line width of wall (does not effect physics)\r\n     */\r\n    constructor(x1, y1, x2, y2, width=1) {\r\n        super();\r\n        this.p1 = new Vector2D(x1, y1);\r\n        this.p2 = new Vector2D(x2, y2);\r\n        this.direction = this.p1.sub(this.p2);\r\n        this.width = width;\r\n        this.normal = (new Vector2D((y2-y1), -(x2-x1))).normalize();\r\n    }\r\n\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle[]} particles \r\n     * @param {Number} timeStep \r\n     */\r\n    resolveCollisions(particles, timeStep) {\r\n        for (let particle of particles) {\r\n            let pos = particle.pos;\r\n            let bounciness = particle.bounciness;\r\n\r\n            let diff = pos.sub(this.p1);\r\n            let segVect = this.p2.sub(this.p1);\r\n          \r\n            let dot = diff.dot(segVect);\r\n            let len_sq = segVect.magSqr();\r\n    \r\n            let lambda = -1;\r\n            if (len_sq != 0) { \r\n                lambda = dot / len_sq;\r\n            }\r\n    \r\n            let projected;\r\n          \r\n            if (lambda < 0) {\r\n              projected = this.p1;\r\n            } else if (lambda > 1) {\r\n              projected = this.p2;\r\n            } else {\r\n              projected = this.p1.add(segVect.mult(lambda));\r\n            }\r\n        \r\n            let projectedDiff = pos.sub(projected);\r\n            let distance = projectedDiff.mag();\r\n\r\n            if (distance <= particle.radius && lambda < 0) {\r\n                let velocity = particle.vel;\r\n                let vDot = - (velocity.dot(diff)) / (diff.magSqr());\r\n                velocity.subTo(diff.mult(vDot * 2));\r\n                velocity.multTo(bounciness);\r\n                //particle.vel = (velocity.sub(diff.mult(vDot * 2))).mult(bounciness);\r\n                particle.pos.addTo(diff.mult(vDot * 2 * bounciness * timeStep));\r\n            } else if (distance <= particle.radius && lambda > 1) {\r\n                let diff = pos.sub(this.p2);\r\n                let velocity = particle.vel;\r\n                let vDot = - (velocity.dot(diff)) / (diff.magSqr());\r\n                velocity.subTo(diff.mult(vDot * 2));\r\n                velocity.multTo(bounciness);\r\n                //particle.vel = (velocity.sub(diff.mult(vDot * 2))).mult(bounciness);\r\n                particle.pos.addTo(diff.mult(vDot * 2 * bounciness * timeStep));\r\n            } else if (distance <= particle.radius) {\r\n                let mag = particle.vel.reflect(this.normal);\r\n                mag.subTo(particle.vel);\r\n                mag.multTo(timeStep);\r\n                particle.vel.reflectTo(this.normal);\r\n                particle.vel.multTo(bounciness);\r\n                //let mag = particle.vel.reflect(this.normal).dot(this.normal);\r\n                //particle.pos = particle.pos.add(this.normal.mult(2 * timeStep * mag * bounciness));\r\n                //let mag = particle.vel.reflect(this.normal).sub(particle.vel).mult(timeStep * bounciness);\r\n                particle.pos.addTo(mag);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Particle[]} particles \r\n     */\r\n    applyCorrection(particles) {\r\n        for (let particle of particles) {\r\n            let pos = particle.pos;\r\n\r\n            let diff = pos.sub(this.p1);\r\n            let segVect = this.p2.sub(this.p1);\r\n          \r\n            let dot = diff.dot(segVect);\r\n            let len_sq = segVect.magSqr();\r\n    \r\n            let lambda = -1;\r\n            if (len_sq != 0) { \r\n                lambda = dot / len_sq;\r\n            }\r\n    \r\n            let projected;\r\n          \r\n            if (lambda < 0) {\r\n              projected = this.p1;\r\n            } else if (lambda > 1) {\r\n              projected = this.p2;\r\n            } else {\r\n              projected = this.p1.add(segVect.mult(lambda));\r\n            }\r\n        \r\n            let projectedDiff = pos.sub(projected);\r\n            let distance = projectedDiff.mag();\r\n            let overlap = distance - particle.radius;\r\n\r\n            if ((distance < particle.radius && lambda < 0) || \r\n                (distance < particle.radius && lambda > 1) || \r\n                (distance < particle.radius)) {\r\n                projectedDiff.normalizeTo();\r\n                projectedDiff.multTo(overlap);\r\n                particle.pos.subTo(projectedDiff);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if a Particle is colliding with the Wall\r\n     * @param {Particle} particle \r\n     * @returns {Boolean} true if particle is colliding with wall\r\n     */\r\n    isCollide(particle) {\r\n        let pos = particle.pos;\r\n        let diff = pos.sub(this.p1);\r\n        let segVect = this.p2.sub(this.p1);\r\n      \r\n        let dot = diff.dot(segVect);\r\n        let len_sq = segVect.magSqr();\r\n\r\n        let lambda = -1;\r\n        if (len_sq != 0) { \r\n            lambda = dot / len_sq;\r\n        }\r\n\r\n        let projected;\r\n      \r\n        if (lambda < 0) {\r\n          projected = this.p1;\r\n        } else if (lambda > 1) {\r\n          projected = this.p2;\r\n        } else {\r\n          projected = this.p1.add(segVect.mult(lambda));\r\n        }\r\n\r\n        let projectedDiff = pos.sub(projected);\r\n        let distance = projectedDiff.mag();\r\n\r\n        return distance < particle.radius;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {[Number, Number]} \r\n     */\r\n    getHashPos() {\r\n        return [(this.p2.x + this.p1.x) / 2, (this.p2.y + this.p1.y) / 2];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {[Number, Number]} \r\n     */\r\n    getHashDimensions() {\r\n        return [Math.abs(this.p2.x - this.p1.x), Math.abs(this.p2.y - this.p1.y)];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns {[Vector2D, Vector2D]} \r\n     */\r\n    vertices() {\r\n        return [this.p1, this.p2];\r\n    }\r\n}\r\n\r\nmodule.exports = WallBoundary;",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/walls/WallBoundary.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 392,
    "kind": "variable",
    "name": "Vector2D",
    "memberof": "src/walls/WallBoundary.js",
    "static": true,
    "longname": "src/walls/WallBoundary.js~Vector2D",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/walls/WallBoundary.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 393,
    "kind": "variable",
    "name": "Wall",
    "memberof": "src/walls/WallBoundary.js",
    "static": true,
    "longname": "src/walls/WallBoundary.js~Wall",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/walls/WallBoundary.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 394,
    "kind": "class",
    "name": "WallBoundary",
    "memberof": "src/walls/WallBoundary.js",
    "static": true,
    "longname": "src/walls/WallBoundary.js~WallBoundary",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/walls/WallBoundary.js",
    "importStyle": null,
    "description": "`WallBoundary` is a simple `Wall` that is comprised of a straight-line between two spatial coordinates. Wall positions\nare generally meant to be immutable since the normal vector is calculated upon instantiation. However, wall position\ncan be modified with some care.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Wall"
    ]
  },
  {
    "__docId__": 395,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#constructor",
    "access": null,
    "description": "Instantiates new `WallBoundary`",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "x1",
        "description": "x-position of first vertex"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "y1",
        "description": "y-position of first vertex"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "x2",
        "description": "x-position of second vertex"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "y2",
        "description": "y-position of second vertex"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "rendered line width of wall (does not effect physics)"
      }
    ]
  },
  {
    "__docId__": 396,
    "kind": "member",
    "name": "p1",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#p1",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 397,
    "kind": "member",
    "name": "p2",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#p2",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 398,
    "kind": "member",
    "name": "direction",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#direction",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 399,
    "kind": "member",
    "name": "width",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#width",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 400,
    "kind": "member",
    "name": "normal",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#normal",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 401,
    "kind": "method",
    "name": "resolveCollisions",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#resolveCollisions",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeStep",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "applyCorrection",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#applyCorrection",
    "access": null,
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle[]"
        ],
        "spread": false,
        "optional": false,
        "name": "particles",
        "description": ""
      }
    ],
    "override": true
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "isCollide",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#isCollide",
    "access": null,
    "description": "Checks if a Particle is colliding with the Wall",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} true if particle is colliding with wall"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Particle"
        ],
        "spread": false,
        "optional": false,
        "name": "particle",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true if particle is colliding with wall"
    }
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "getHashPos",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#getHashPos",
    "access": null,
    "description": "",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Number, Number]} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Number, Number]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "getHashDimensions",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#getHashDimensions",
    "access": null,
    "description": "",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Number, Number]} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Number, Number]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "vertices",
    "memberof": "src/walls/WallBoundary.js~WallBoundary",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/walls/WallBoundary.js~WallBoundary#vertices",
    "access": null,
    "description": "",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Vector2D, Vector2D]} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Vector2D, Vector2D]"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "src/walls/walls.js",
    "content": "/**\r\n * Node module exports for the walls directory\r\n */\r\n\r\nconst walls = module.exports;\r\n\r\nwalls.Wall = require(\"./Wall\");\r\nwalls.WallBoundary = require(\"./WallBoundary\");\r\nwalls.RectangularWorldBoundary = require(\"./RectangularWorldBoundary\");\r\n",
    "static": true,
    "longname": "C:/Users/User/Documents/GitHub/Math-EE/src/walls/walls.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "variable",
    "name": "walls",
    "memberof": "src/walls/walls.js",
    "static": true,
    "longname": "src/walls/walls.js~walls",
    "access": null,
    "export": false,
    "importPath": "pphys2d/src/walls/walls.js",
    "importStyle": null,
    "description": "Node module exports for the walls directory",
    "lineNumber": 5
  },
  {
    "kind": "index",
    "content": "# Particle-based Physics Engine (with constraints)\r\n\r\nCurrently in development: I'm working on several optimizations and major refactorizations of the code!\r\n\r\nhttps://hanson-sun.github.io/particle-physics-engine/\r\n\r\nSome of my research about modelling constrained 2D particle-based physics systems. In my paper, I investigate the extent of which penalty and relaxed-geometric constraints can model 2D particle physics systems. The focus of this investigation leaned towards the mathematical aspect of constrained systems. However, I still provided a programmatic implementation. I would like to work on this further in the future, including adding more constraint types, as well as a more detailed section about programmatic implementation.\r\n\r\nIt took me a while to research and write everything, read the paper here https://github.com/Hanson-Sun/Math-EE/blob/main/HansonS_Math_EE.pdf (HansonS_Math_EE.pdf)\r\n\r\nThis repository also includes additional files for demo purposes\r\n\r\n\r\n### TODO\r\n- [ ] Refactor code\r\n  - [ ] Add behaviors (Maybe add more behaviors)\r\n    - [x] Collision \r\n    - [x] Attraction\r\n    - [x] Drag\r\n    - [x] Pivots (its very scuffed tho)\r\n    - [ ] area constraints (low priority)\r\n  - [x] add walls\r\n    - [x] general walls/world/vertical+horizontal\r\n  - [x] add constraints\r\n    - [x] force based\r\n    - [x] position based\r\n  - [x] Fix solver, world, and others\r\n  - [x] Fix renderer and potentially add more features\r\n    - [x] constraint stress colours? \r\n  - [x] Add constraint breaking\r\n- [ ] write docs\r\n- [ ] Standardize units (?) grim... i need to do physics\r\n- [ ] formalize package (important!!!)\r\n- [ ] Optimize\r\n- [ ] update paper... maybe\r\n\r\n### Bugs\r\n- some degree of instability when particles are stacked up (?) --> probably and issue with the collision stiffness and iterative update.\r\n  - i now think its because of the position resolver --> its not converging to what its supposed to be\r\n  - issue with stationary collision detection\r\n- unify solver behavior --> focus on position-based, velocity independent constraint and collision behavior.\r\n  - seems to have a tendency to lose energy when constraints are used.\r\n  - semi-fixed\r\n- Vector2D modify methods are inconsistent for some reason --> test this\r\n- **Fix iteration per frame to use sub-stepping** --> current implementation does not use explicit substepping  \r\n  - fix time inconsistencies for iteration # changes\r\n- resolve constructor complexity by changing how the options work\r\n- fix mouse edge movement instability\r\n- test custom mouse function input\r\n- fix spatial hashgrid to work with unbounded values (mod instead of clamp)\r\n\r\n- IMPROVE SPATIAL HASH ALGORITHM (make it dense) + test if its actually better  \r\n  - after testing, i have concluded that is isnt really better for this case\r\n  - dense structure \r\n    - pros: more memory efficient, unbounded (ish, there will be hash collisions), syntactically simpler;\r\n    - cons: cannot be iteratively updated (deal breaker), slightly slower\r\n  - current sparse structure\r\n    - memory shouldnt be a huge issue at this point, **unbounded behavior can be simulated** with `((this % n) + n) % n`, more convoluted code in general, but should be abstracted away from the user\r\n\r\nNotes:\r\ni think ill leave the rendering step with more freedom to the users \r\n\r\ntheres a setSolverUpdate() function that is like unity's Update() but kind of different...\r\n\r\n\r\ni think ill name it `PPhys2D` for **P**article-based **P**hysics engine **2D**\r\n\r\n\r\n",
    "longname": "C:\\Users\\User\\Documents\\GitHub\\Math-EE\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"pphys2d\",\r\n  \"description\": \"A light-weight 2D particle physics engine written with vanilla js\",\r\n  \"version\": \"1.0.0\",\r\n  \"main\": \"dist/pphys.js\",\r\n  \"homepage\": \"https://github.com/Hanson-Sun/particle-physics-engine\",\r\n  \"scripts\": {\r\n    \"build\": \"webpack --config webpack.config.js\",\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\r\n  },\r\n  \"author\": \"Hanson Sun\",\r\n  \"license\": \"MIT\",\r\n  \"type\": \"commonjs\",\r\n  \"devDependencies\": {\r\n    \"webpack\": \"^5.84.1\",\r\n    \"webpack-cli\": \"^5.1.1\"\r\n  },\r\n  \"files\": [\r\n    \"src\",\r\n    \"build\",\r\n    \"README.md\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\User\\Documents\\GitHub\\Math-EE\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]